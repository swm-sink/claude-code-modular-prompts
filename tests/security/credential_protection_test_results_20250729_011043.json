{
  "test_execution": {
    "timestamp": "2025-07-29T01:10:43.709073",
    "total_tests": 25,
    "tests_passed": 22,
    "tests_failed": 3,
    "success_rate": 88.0
  },
  "credential_patterns_tested": 13,
  "individual_pattern_tests": {
    "total": 16,
    "passed": 13,
    "results": [
      {
        "name": "AWS Access Key",
        "passed": true,
        "input_length": 38,
        "detected_count": 1,
        "detected_types": [
          "aws_access_key"
        ],
        "expected_type": "aws_access_key",
        "masked_output": "AWS_ACCESS_KEY_ID=AKIA************MPLE"
      },
      {
        "name": "AWS Secret Key",
        "passed": true,
        "input_length": 62,
        "detected_count": 1,
        "detected_types": [
          "aws_secret"
        ],
        "expected_type": "aws_secret",
        "masked_output": "AWS_SECRET_ACCESS_KEY=********************************AMPLEKEY"
      },
      {
        "name": "MySQL Connection String",
        "passed": true,
        "input_length": 48,
        "detected_count": 1,
        "detected_types": [
          "db_connection"
        ],
        "expected_type": "db_connection",
        "masked_output": "mysq*******************************3306/database"
      },
      {
        "name": "PostgreSQL Connection String",
        "passed": true,
        "input_length": 57,
        "detected_count": 1,
        "detected_types": [
          "db_connection"
        ],
        "expected_type": "db_connection",
        "masked_output": "post********************************************5432/mydb"
      },
      {
        "name": "Generic API Key",
        "passed": true,
        "input_length": 46,
        "detected_count": 2,
        "detected_types": [
          "generic_api_key",
          "secret_env"
        ],
        "expected_type": "generic_api_key",
        "masked_output": "api_**************************************def\""
      },
      {
        "name": "Bearer Token",
        "passed": true,
        "input_length": 61,
        "detected_count": 1,
        "detected_types": [
          "bearer_token"
        ],
        "expected_type": "bearer_token",
        "masked_output": "Authorization: Bear**************************************8stu"
      },
      {
        "name": "JWT Token",
        "passed": true,
        "input_length": 155,
        "detected_count": 2,
        "detected_types": [
          "aws_secret",
          "jwt_token"
        ],
        "expected_type": "jwt_token",
        "masked_output": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJz********************************IkpvaG4gRG9lIiwiaWF0IjoxNTE..."
      },
      {
        "name": "GitHub Personal Access Token",
        "passed": false,
        "input_length": 53,
        "detected_count": 0,
        "detected_types": [],
        "expected_type": "github_token",
        "masked_output": "github_token = ghp_1234567890abcdef1234567890abcdef12"
      },
      {
        "name": "SSH Private Key",
        "passed": true,
        "input_length": 51,
        "detected_count": 1,
        "detected_types": [
          "ssh_private_key"
        ],
        "expected_type": "ssh_private_key",
        "masked_output": "----***********************----\nMIIEpAIBAAKCAQEA..."
      },
      {
        "name": "OpenSSH Private Key",
        "passed": true,
        "input_length": 54,
        "detected_count": 1,
        "detected_types": [
          "ssh_private_key"
        ],
        "expected_type": "ssh_private_key",
        "masked_output": "----***************************----\nb3BlbnNzaC1rZXk..."
      },
      {
        "name": "Docker Registry Auth",
        "passed": true,
        "input_length": 32,
        "detected_count": 1,
        "detected_types": [
          "docker_auth"
        ],
        "expected_type": "docker_auth",
        "masked_output": "{\"aut**********************A==\"}"
      },
      {
        "name": "Environment Secret",
        "passed": false,
        "input_length": 43,
        "detected_count": 0,
        "detected_types": [],
        "expected_type": "secret_env",
        "masked_output": "export SECRET_KEY=super_secret_value_123456"
      },
      {
        "name": "Password Environment Variable",
        "passed": false,
        "input_length": 35,
        "detected_count": 0,
        "detected_types": [],
        "expected_type": "password_field",
        "masked_output": "DB_PASSWORD=myverysecurepassword123"
      },
      {
        "name": "Azure Client Secret",
        "passed": true,
        "input_length": 52,
        "detected_count": 1,
        "detected_types": [
          "azure_secret"
        ],
        "expected_type": "azure_secret",
        "masked_output": "client_secret = 1234****************************9012"
      },
      {
        "name": "Safe Text",
        "passed": true,
        "input_length": 45,
        "detected_count": 0,
        "detected_types": [],
        "expected_type": null,
        "masked_output": "This is just regular text with no credentials"
      },
      {
        "name": "Safe Log Entry",
        "passed": true,
        "input_length": 45,
        "detected_count": 0,
        "detected_types": [],
        "expected_type": null,
        "masked_output": "Application started successfully on port 3000"
      }
    ]
  },
  "command_output_protection_tests": {
    "total": 4,
    "passed": 4,
    "results": [
      {
        "command": "/secure-assess scan",
        "passed": true,
        "credentials_detected": 3,
        "types_found": [
          "aws_secret",
          "aws_access_key",
          "db_connection"
        ],
        "protection_active": true
      },
      {
        "command": "/db-migrate status",
        "passed": true,
        "credentials_detected": 1,
        "types_found": [
          "db_connection"
        ],
        "protection_active": true
      },
      {
        "command": "/deploy production",
        "passed": true,
        "credentials_detected": 2,
        "types_found": [
          "aws_access_key",
          "docker_auth"
        ],
        "protection_active": true
      },
      {
        "command": "/secure-assess audit",
        "passed": true,
        "credentials_detected": 0,
        "types_found": [],
        "protection_active": false
      }
    ]
  },
  "error_sanitization_tests": {
    "total": 5,
    "passed": 5,
    "results": [
      {
        "original_error": "Database connection failed: mysql://user:password1...",
        "passed": true,
        "credentials_found": 1,
        "sanitized_error": "Database connection failed: mysq******************..."
      },
      {
        "original_error": "Authentication failed for AWS_ACCESS_KEY_ID=AKIAIO...",
        "passed": true,
        "credentials_found": 1,
        "sanitized_error": "Authentication failed for AWS_ACCESS_KEY_ID=AKIA**..."
      },
      {
        "original_error": "Invalid token: Bearer abc123def456ghi789jkl012mno3...",
        "passed": true,
        "credentials_found": 1,
        "sanitized_error": "Invalid token: Bear*******************************..."
      },
      {
        "original_error": "File not found: /app/config.yml",
        "passed": true,
        "credentials_found": 0,
        "sanitized_error": "File not found: /app/config.yml"
      },
      {
        "original_error": "Port 3000 is already in use",
        "passed": true,
        "credentials_found": 0,
        "sanitized_error": "Port 3000 is already in use"
      }
    ]
  },
  "functional_verification": {
    "credential_detection_working": true,
    "command_protection_active": true,
    "error_sanitization_functional": true
  }
}