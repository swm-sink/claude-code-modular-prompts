<?xml version="1.0" encoding="UTF-8"?>
<!--
  Python/Django Project Configuration
  
  This configuration is optimized for Django applications with PostgreSQL,
  Celery for async tasks, and comprehensive testing.
  
  Copy this file to your Django project root as PROJECT_CONFIG.xml
  and customize the values for your specific project.
-->

<project_config>
  <project_metadata>
    <name>my-django-app</name>
    <version>1.0.0</version>
    <description>Django web application with REST API</description>
    <repository>https://github.com/yourorg/my-django-app</repository>
  </project_metadata>

  <tech_stack>
    <primary_language>python</primary_language>
    <framework>django</framework>
    <database>postgresql</database>
    <additional_tech>
      <tech>redis</tech>
      <tech>celery</tech>
      <tech>django-rest-framework</tech>
      <tech>gunicorn</tech>
      <tech>nginx</tech>
    </additional_tech>
  </tech_stack>

  <project_structure>
    <source_directory>src</source_directory>
    <test_directory>tests</test_directory>
    <docs_directory>docs</docs_directory>
    <scripts_directory>scripts</scripts_directory>
    <config_directory>config</config_directory>
    <static_directory>static</static_directory>
    <templates_directory>templates</templates_directory>
  </project_structure>

  <commands>
    <test>python -m pytest --cov=src --cov-report=term-missing</test>
    <lint>flake8 src tests && black --check src tests && isort --check-only src tests</lint>
    <build>python manage.py collectstatic --noinput</build>
    <format>black src tests && isort src tests</format>
    <dev_server>python manage.py runserver</dev_server>
    <migrate>python manage.py migrate</migrate>
    <install>pip install -r requirements.txt</install>
  </commands>

  <quality_standards>
    <test_coverage>
      <threshold>92</threshold>
      <enforcement>blocking</enforcement>
    </test_coverage>
    <performance>
      <response_time_p95>300</response_time_p95>
      <memory_limit>512</memory_limit>
    </performance>
    <code_quality>
      <max_complexity>10</max_complexity>
      <max_line_length>88</max_line_length>
    </code_quality>
  </quality_standards>

  <framework_behavior>
    <file_creation_policy>conservative</file_creation_policy>
    <test_first_enforcement>strict</test_first_enforcement>
    <context_management>
      <max_file_tokens>4000</max_file_tokens>
      <max_context_tokens>120000</max_context_tokens>
      <reserved_work_tokens>50000</reserved_work_tokens>
    </context_management>
  </framework_behavior>

  <ai_temperature>
    <factual>0.2</factual>
    <analysis>0.1</analysis>
    <creative>0.7</creative>
  </ai_temperature>

  <security>
    <security_scanning>true</security_scanning>
    <dependency_scanning>true</dependency_scanning>
    <secrets_detection>true</secrets_detection>
  </security>

  <development_workflow>
    <git_workflow>feature-branch</git_workflow>
    <branch_naming>feature/app-functionality</branch_naming>
    <commit_format>conventional</commit_format>
    <code_review>
      <required>true</required>
      <min_reviewers>2</min_reviewers>
    </code_review>
  </development_workflow>

  <testing_strategy>
    <test_types>
      <unit_tests>true</unit_tests>
      <integration_tests>true</integration_tests>
      <end_to_end_tests>true</end_to_end_tests>
    </test_types>
    <test_framework>
      <name>pytest</name>
      <config_file>pytest.ini</config_file>
    </test_framework>
  </testing_strategy>

  <deployment>
    <strategy>ci-cd</strategy>
    <environments>
      <environment>
        <name>development</name>
        <url>http://localhost:8000</url>
      </environment>
      <environment>
        <name>staging</name>
        <url>https://staging-api.myapp.com</url>
      </environment>
      <environment>
        <name>production</name>
        <url>https://api.myapp.com</url>
      </environment>
    </environments>
  </deployment>

  <team>
    <size>medium</size>
    <methodology>agile</methodology>
    <communication>
      <issue_tracking>github</issue_tracking>
      <documentation_style>sphinx</documentation_style>
    </communication>
  </team>

  <integrations>
    <services>
      <service>
        <name>github</name>
        <enabled>true</enabled>
        <config>
          <issue_tracking>true</issue_tracking>
          <pr_automation>true</pr_automation>
        </config>
      </service>
      <service>
        <name>heroku</name>
        <enabled>true</enabled>
        <config>
          <auto_deploy>true</auto_deploy>
          <review_apps>true</review_apps>
        </config>
      </service>
      <service>
        <name>sentry</name>
        <enabled>true</enabled>
        <config>
          <error_tracking>true</error_tracking>
          <performance_monitoring>true</performance_monitoring>
        </config>
      </service>
    </services>
  </integrations>

  <!-- Django-specific configurations -->
  <django_specific>
    <apps_directory>src/apps</apps_directory>
    <settings_module>config.settings</settings_module>
    <admin_enabled>true</admin_enabled>
    <rest_framework>true</rest_framework>
    <celery_enabled>true</celery_enabled>
    <cache_backend>redis</cache_backend>
    <session_engine>cached_db</session_engine>
    <database_engine>postgresql</database_engine>
  </django_specific>
</project_config>