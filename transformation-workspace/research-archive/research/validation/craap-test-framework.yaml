# CRAAP Test Framework for Evidence Validation
# Version: 1.0
# Purpose: Rigorous quality assessment for extracted patterns
# Created: 2025-08-07

framework:
  name: CRAAP Evidence Validation Framework
  description: Comprehensive quality assessment system ensuring only evidence-based patterns enter consultation system
  version: 1.0
  
  # Core CRAAP Test Components
  assessment_criteria:
    
    currency:
      description: "How recent and up-to-date is the pattern?"
      weight: 0.15
      scoring_rubric:
        1.0:
          description: "Highly current"
          criteria:
            - Updated within last 3 months
            - Compatible with latest Claude Code version
            - All dependencies current and maintained
            - Recent community activity
        0.8:
          description: "Current"
          criteria:
            - Updated within last 6 months
            - Compatible with recent Claude Code versions
            - Most dependencies current
            - Some recent community activity
        0.6:
          description: "Moderately current"
          criteria:
            - Updated within last year
            - Compatible with supported versions
            - Key dependencies current
            - Occasional community activity
        0.4:
          description: "Somewhat outdated"
          criteria:
            - Updated within last 2 years
            - May need version compatibility checks
            - Some dependencies outdated
            - Limited recent activity
        0.2:
          description: "Outdated"
          criteria:
            - Updated > 2 years ago
            - Compatibility uncertain
            - Multiple outdated dependencies
            - No recent activity
    
    relevance:
      description: "How applicable is this pattern to our deep discovery consultation goals?"
      weight: 0.25
      scoring_rubric:
        1.0:
          description: "Directly relevant"
          criteria:
            - Perfectly aligned with 30-60 minute consultation
            - Supports depth-over-speed philosophy
            - Applicable to target use cases
            - Enhances project understanding
        0.8:
          description: "Highly relevant"
          criteria:
            - Strongly aligned with consultation goals
            - Supports depth-focused approach
            - Applicable with minor adaptations
            - Contributes to project intelligence
        0.6:
          description: "Moderately relevant"
          criteria:
            - Generally aligned with goals
            - Supports some consultation aspects
            - Requires adaptation for use
            - Some contribution to understanding
        0.4:
          description: "Somewhat relevant"
          criteria:
            - Partially aligned with goals
            - Limited consultation benefit
            - Significant adaptation required
            - Minimal contribution
        0.2:
          description: "Minimally relevant"
          criteria:
            - Poorly aligned with goals
            - Little consultation benefit
            - Extensive adaptation needed
            - Negligible contribution

    authority:
      description: "How credible and trustworthy is the source?"
      weight: 0.20
      scoring_rubric:
        1.0:
          description: "Highly authoritative"
          criteria:
            - 1000+ GitHub stars
            - Recognized experts as maintainers
            - Strong community validation
            - Enterprise adoption evidence
            - Multiple contributors
        0.8:
          description: "Authoritative"
          criteria:
            - 500+ GitHub stars
            - Experienced maintainers
            - Good community feedback
            - Some enterprise usage
            - Regular contributors
        0.6:
          description: "Moderately authoritative"
          criteria:
            - 100+ GitHub stars
            - Competent maintainers
            - Positive community response
            - Individual/team usage
            - Some contributors
        0.4:
          description: "Limited authority"
          criteria:
            - 50+ GitHub stars
            - Basic maintainer expertise
            - Mixed community feedback
            - Limited usage evidence
            - Few contributors
        0.2:
          description: "Low authority"
          criteria:
            - < 50 GitHub stars
            - Unknown maintainer expertise
            - Little community validation
            - Minimal usage evidence
            - Single contributor

    accuracy:
      description: "How technically correct and well-implemented is the pattern?"
      weight: 0.25
      scoring_rubric:
        1.0:
          description: "Highly accurate"
          criteria:
            - Working examples with comprehensive tests
            - No technical errors found
            - Best practices followed
            - Performance optimized
            - Security considerations addressed
        0.8:
          description: "Accurate"
          criteria:
            - Working examples with basic tests
            - Minor technical issues only
            - Generally follows best practices
            - Reasonable performance
            - Basic security considerations
        0.6:
          description: "Mostly accurate"
          criteria:
            - Working examples with limited validation
            - Some technical issues present
            - Partially follows best practices
            - Acceptable performance
            - Some security gaps
        0.4:
          description: "Questionable accuracy"
          criteria:
            - Examples with known issues
            - Multiple technical problems
            - Limited best practice adherence
            - Performance concerns
            - Security vulnerabilities
        0.2:
          description: "Poor accuracy"
          criteria:
            - Non-working or broken examples
            - Significant technical errors
            - Poor practices demonstrated
            - Performance problems
            - Security issues

    purpose:
      description: "How well does the pattern serve production-ready, intentional purposes?"
      weight: 0.15
      scoring_rubric:
        1.0:
          description: "Clear production purpose"
          criteria:
            - Created for production use
            - Clear business/technical value
            - Solves real problems
            - Long-term maintenance intended
            - Professional implementation
        0.8:
          description: "Strong purpose"
          criteria:
            - Created for team/community use
            - Good value proposition
            - Addresses common needs
            - Regular maintenance expected
            - Quality implementation
        0.6:
          description: "Moderate purpose"
          criteria:
            - Created for learning/demonstration
            - Educational value
            - Addresses specific scenarios
            - Occasional maintenance
            - Adequate implementation
        0.4:
          description: "Limited purpose"
          criteria:
            - Created for experimentation
            - Proof-of-concept value
            - Narrow use cases
            - Minimal maintenance
            - Basic implementation
        0.2:
          description: "Unclear purpose"
          criteria:
            - Purpose not evident
            - Limited clear value
            - Very specific/niche
            - No maintenance plan
            - Poor implementation

  # Overall Scoring Methodology
  confidence_calculation:
    formula: "weighted_sum(currency*0.15, relevance*0.25, authority*0.20, accuracy*0.25, purpose*0.15)"
    
    confidence_thresholds:
      high:
        min_score: 0.80
        description: "High confidence - pattern ready for immediate use"
        action: "Include in consultation system"
        
      medium:
        min_score: 0.60
        max_score: 0.79
        description: "Medium confidence - pattern usable with validation"
        action: "Include with additional validation or adaptation notes"
        
      low:
        min_score: 0.40
        max_score: 0.59
        description: "Low confidence - pattern needs significant work"
        action: "Flag for improvement or reject"
        
      reject:
        max_score: 0.39
        description: "Insufficient quality - pattern not suitable"
        action: "Reject and document reasons"

  # Additional Quality Gates
  quality_gates:
    
    minimum_evidence_requirement:
      description: "Patterns must have sufficient evidence sources"
      requirements:
        - minimum_sources: 3
        - source_diversity: "At least 2 different domains or repository types"
        - working_examples: "At least 1 working, testable example"
      
    technical_validation:
      description: "Technical correctness validation"
      requirements:
        - syntax_check: "Valid YAML/Markdown structure"
        - claude_code_compliance: "Follows Claude Code command standards"
        - tool_usage: "Uses allowed tools appropriately"
        - error_handling: "Includes appropriate error handling"
      
    documentation_quality:
      description: "Documentation completeness validation"
      requirements:
        - clear_description: "Purpose and usage clearly explained"
        - examples_provided: "Working examples included"
        - prerequisites_documented: "Dependencies and requirements listed"
        - troubleshooting: "Common issues and solutions addressed"

  # Cross-Reference Validation
  cross_reference_validation:
    
    relationship_types:
      extends:
        description: "Pattern builds upon another pattern"
        validation: "Base pattern must exist and be validated"
        confidence_boost: 0.05
        
      conflicts:
        description: "Pattern conflicts with another pattern"
        validation: "Conflict must be documented and resolved"
        confidence_penalty: -0.10
        
      complements:
        description: "Pattern works well with another pattern"
        validation: "Complementary relationship must be demonstrated"
        confidence_boost: 0.03
        
      requires:
        description: "Pattern depends on another pattern"
        validation: "Dependency must be satisfied and validated"
        confidence_neutral: 0.00

    correlation_strength:
      strong:
        threshold: 0.8
        description: "Patterns appear together frequently"
        evidence_requirement: "5+ repositories show this correlation"
        
      moderate:
        threshold: 0.6
        description: "Patterns sometimes appear together"
        evidence_requirement: "3+ repositories show this correlation"
        
      weak:
        threshold: 0.4
        description: "Patterns occasionally appear together"
        evidence_requirement: "2+ repositories show this correlation"

  # Validation Process Workflow
  validation_workflow:
    
    step_1_initial_assessment:
      description: "Quick viability check"
      actions:
        - Check minimum evidence sources (3+)
        - Verify technical completeness
        - Assess basic relevance
      pass_criteria: "All basic requirements met"
      
    step_2_detailed_craap:
      description: "Comprehensive CRAAP evaluation"
      actions:
        - Score each CRAAP criterion
        - Calculate weighted confidence score
        - Document scoring rationale
      pass_criteria: "Confidence score >= 0.60"
      
    step_3_cross_reference:
      description: "Relationship and dependency validation"
      actions:
        - Identify pattern relationships
        - Validate dependencies
        - Check for conflicts
        - Calculate relationship adjustments
      pass_criteria: "No unresolved conflicts"
      
    step_4_technical_validation:
      description: "Technical correctness verification"
      actions:
        - Validate syntax and structure
        - Check Claude Code compliance
        - Test working examples
        - Verify tool usage
      pass_criteria: "All technical requirements met"
      
    step_5_final_scoring:
      description: "Final confidence calculation and decision"
      actions:
        - Apply all adjustments
        - Calculate final confidence score
        - Make inclusion/rejection decision
        - Document final assessment
      outcomes:
        - "Accept with high confidence"
        - "Accept with medium confidence"
        - "Accept with conditions"
        - "Reject with improvement recommendations"

# Quality Assurance Requirements
quality_assurance:
  
  reviewer_requirements:
    - Technical expertise in Claude Code
    - Understanding of consultation system goals
    - Experience with pattern evaluation
    - Unbiased assessment capability
    
  review_process:
    - Independent dual review for borderline cases (0.55-0.65 scores)
    - Mandatory peer review for high-impact patterns
    - Regular calibration sessions between reviewers
    - Appeals process for rejected patterns
    
  continuous_improvement:
    - Monthly framework review and updates
    - Feedback integration from pattern usage
    - Threshold adjustment based on outcomes
    - Process refinement based on efficiency metrics

# Reporting and Documentation
reporting:
  
  pattern_validation_report:
    sections:
      - Pattern identification and source
      - CRAAP scores with detailed rationale
      - Cross-reference analysis
      - Technical validation results
      - Final confidence score and decision
      - Improvement recommendations
    
  aggregate_validation_metrics:
    - Total patterns evaluated
    - Acceptance rate by confidence level
    - Common rejection reasons
    - Average confidence scores by domain
    - Validation time and efficiency metrics
    
  trend_analysis:
    - Pattern quality trends over time
    - Source repository quality evolution
    - Framework effectiveness assessment
    - Validation accuracy tracking

# Success Criteria
success_criteria:
  
  quantitative_targets:
    - 80%+ of validated patterns achieve medium+ confidence
    - 40%+ of validated patterns achieve high confidence
    - < 10% false positives (patterns that fail in practice)
    - < 5% false negatives (rejected patterns that would work well)
    
  qualitative_indicators:
    - Patterns consistently support 30-60 minute consultation goals
    - No major technical issues in accepted patterns
    - Clear improvement in consultation system quality
    - Stakeholder confidence in pattern selection process

# Framework Maintenance
maintenance:
  
  regular_updates:
    - Monthly threshold review
    - Quarterly framework assessment
    - Semi-annual comprehensive evaluation
    - Annual framework version upgrade
    
  feedback_integration:
    - Pattern usage success/failure tracking
    - Consultation system effectiveness metrics
    - User feedback on pattern quality
    - Technical debt assessment
    
  version_control:
    - All framework changes tracked
    - Backward compatibility maintained
    - Migration guides for major updates
    - Rollback procedures documented