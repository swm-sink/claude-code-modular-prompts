{
  "framework": {
    "name": "Claude Code Modular Prompts",
    "version": "3.0.0",
    "description": "Advanced meta-prompting framework with self-improving capabilities for Claude Code workflow automation",
    "reality_check": "Sophisticated prompt engineering system with GitHub integration, NOT autonomous AI agents"
  },
  
  "commands": {
    "auto": {
      "description": "Intelligent routing with research-first approach",
      "delegation": "modules/patterns/intelligent-routing.md",
      "features": {
        "research_mandatory": true,
        "complexity_analysis": true,
        "route_to_best_command": true,
        "legacy_command_support": true
      }
    },
    "task": {
      "description": "Single-component development with TDD enforcement",
      "delegation": "modules/development/task-management.md",
      "features": {
        "tdd_mandatory": true,
        "single_component_focus": true,
        "quality_gates_enforced": true,
        "session_creation": "for_complex_tasks"
      }
    },
    "feature": {
      "description": "Comprehensive feature development with PRD-first approach",
      "delegation": "modules/development/feature-workflow.md",
      "features": {
        "prd_required": true,
        "mvp_strategy": true,
        "feature_validation": true,
        "session_creation": true
      }
    },
    "swarm": {
      "description": "Multi-agent coordination with mandatory session creation",
      "delegation": "modules/patterns/multi-agent.md",
      "features": {
        "session_creation": "always_mandatory",
        "github_issue_required": true,
        "minimum_agents": 2,
        "coordination_patterns": ["task_specialized", "batch_distributed", "hybrid_complex"]
      }
    },
    "query": {
      "description": "Research-only operations without code changes",
      "delegation": "modules/development/research-analysis.md",
      "features": {
        "read_only": true,
        "no_modifications": true,
        "research_focused": true,
        "analysis_tools": ["WebSearch", "Glob", "Grep", "Read"]
      }
    },
    "session": {
      "description": "GitHub issue integration and tracking",
      "delegation": "modules/patterns/session-management.md",
      "features": {
        "github_integration": true,
        "issue_creation": true,
        "epic_support": true,
        "progress_tracking": true
      }
    },
    "prompt": {
      "description": "Comprehensive prompt engineering lifecycle",
      "delegation": "modules/development/prompt-engineering.md",
      "features": {
        "prompt_design": true,
        "evaluation_framework": true,
        "iteration_support": true,
        "effectiveness_tracking": true
      }
    },
    "security": {
      "description": "Security analysis and implementation",
      "delegation": "modules/security/audit.md",
      "features": {
        "threat_modeling": true,
        "security_standards": true,
        "audit_capabilities": true,
        "compliance_focus": "internal_tool_appropriate"
      }
    },
    "test": {
      "description": "TDD enforcement and testing workflows",
      "delegation": "modules/quality/tdd.md",
      "features": {
        "tdd_cycle": "RED-GREEN-REFACTOR",
        "test_coverage": 90,
        "quality_enforcement": true,
        "testing_patterns": true
      }
    },
    "commit": {
      "description": "Git operations and commit management",
      "delegation": "modules/patterns/git-operations.md",
      "features": {
        "git_operations": true,
        "commit_automation": true,
        "branch_management": false,
        "main_branch_only": true
      }
    },
    "protocol": {
      "description": "Quality standards enforcement for internal tool",
      "delegation": "modules/quality/protocol-enforcement.md",
      "features": {
        "quality_gates": true,
        "tdd_enforced": true,
        "security_standards": true,
        "performance_targets": true
      }
    },
    "fastapi": {
      "description": "API development with FastAPI patterns",
      "delegation": "modules/development/api-development.md",
      "features": {
        "api_development": true,
        "fastapi_specific": true,
        "modern_patterns": true,
        "performance_focused": true
      }
    },
    "docs": {
      "description": "Documentation navigation and generation",
      "delegation": "modules/development/documentation.md",
      "features": {
        "documentation_index": true,
        "smart_navigation": true,
        "generation_support": true,
        "search_capabilities": true
      }
    }
  },
  
  "execution_settings": {
    "parallel_execution": "always_preferred",
    "read_before_write": "mandatory",
    "research_first": "for_complex_work",
    "evidence_based": true,
    "critical_thinking": true,
    "github_integration": "enabled",
    "session_management": "automatic_for_complex",
    "quality_gates": "enforced",
    "modular_prompts": "never_delete",
    "token_optimization": true
  },
  
  "quality_standards": {
    "tdd_cycle": "RED-GREEN-REFACTOR",
    "test_coverage_minimum": 90,
    "security_threat_modeling": true,
    "performance_target_p95": "200ms",
    "documentation_required": true
  },
  
  "module_system": {
    "delegation_pattern": "commands_only_delegate",
    "modules_only_implement": true,
    "zero_redundancy": true,
    "dynamic_composition": true,
    "xml_interfaces": true,
    "token_limits": {
      "module_size": 2000,
      "foundation_file": 3000
    }
  },
  
  "multi_agent_patterns": {
    "task_pattern": {
      "description": "Specialized expertise for different domains",
      "usage": "Task('Security analysis of authentication flow')",
      "session_required": false,
      "parallel_execution": true
    },
    "batch_pattern": {
      "description": "Similar work across multiple targets",
      "usage": "Batch(['file1.py', 'file2.py'], 'Add error handling')",
      "session_required": false,
      "parallel_execution": true
    },
    "swarm_pattern": {
      "description": "Complex multi-agent coordination with session tracking",
      "usage": "/swarm 'Build e-commerce platform with microservices'",
      "session_required": true,
      "parallel_execution": true
    }
  },
  
  "github_integration": {
    "issue_templates_enabled": true,
    "epic_tracking": true,
    "session_management": true,
    "automated_issue_creation": true,
    "cli_integration": true,
    "triggers": {
      "complexity_threshold": 10,
      "multi_agent_threshold": 3,
      "framework_changes": true,
      "context_risk": true
    }
  },
  
  "permissions": {
    "allow": [
      "Bash(*)",
      "Read(*)", 
      "Edit(*)",
      "Write(*)",
      "MultiEdit(*)",
      "Glob(*)",
      "Grep(*)",
      "LS(*)",
      "Task(*)",
      "WebFetch(*)",
      "WebSearch(*)",
      "NotebookRead(*)",
      "NotebookEdit(*)",
      "TodoRead(*)",
      "TodoWrite(*)",
      "exit_plan_mode(*)",
      "mcp__ide__getDiagnostics(*)",
      "mcp__ide__executeCode(*)",
      "mcp__*"
    ],
    "deny": [],
    "framework_operations": {
      "read_modules": "ALWAYS_ALLOWED",
      "delegate_commands": "ALWAYS_ALLOWED",
      "create_github_issues": "ALWAYS_ALLOWED",
      "parallel_tool_execution": "ALWAYS_ALLOWED",
      "research_operations": "ALWAYS_ALLOWED"
    },
    "file_operations": {
      "read_files": "ALWAYS_ALLOWED",
      "edit_existing_files": "REQUIRE_READ_FIRST",
      "create_new_files": "JUSTIFIED_ONLY",
      "delete_files": "NEVER_ALLOWED",
      "write_over_files": "REQUIRE_READ_FIRST"
    },
    "git_operations": {
      "standard_operations": "ALWAYS_ALLOWED",
      "force_operations": "WITH_EXPLICIT_JUSTIFICATION",
      "destructive_operations": "WITH_CAUTION"
    },
    "quality_enforcement": {
      "tdd_cycle_enforcement": "MANDATORY",
      "read_before_edit": "MANDATORY",
      "research_before_implementation": "MANDATORY",
      "evidence_based_claims": "MANDATORY",
      "critical_thinking": "MANDATORY"
    }
  }
}