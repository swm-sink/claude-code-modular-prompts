<?xml version="1.0" encoding="UTF-8"?>
<!-- 
PROJECT_CONFIG - TIER 3: ADVANCED
5-minute setup for enterprise and complex projects
Full configuration access with expert-level customization
All 145+ parameters available with comprehensive validation
-->
<project_configuration version="1.0.0" tier="advanced">
  <!-- Basic Project Information -->
  <project_info>
    <name>[REQUIRED]</name>
    <domain>[REQUIRED: web-development | mobile-engineering | platform-engineering | data-analytics | game-development | fintech | healthcare | e-commerce | enterprise | research]</domain>
    <description>[RECOMMENDED]</description>
    <primary_language>[REQUIRED]</primary_language>
    <framework_stack>[CUSTOM: specify complete stack]</framework_stack>
    <business_context>
      <industry>[OPTIONAL: fintech | healthcare | retail | manufacturing | education | government]</industry>
      <scale>[OPTIONAL: startup | enterprise | global]</scale>
      <compliance_requirements>[OPTIONAL: SOX | HIPAA | GDPR | PCI-DSS | SOC2]</compliance_requirements>
    </business_context>
  </project_info>

  <!-- Project Structure - Full Customization -->
  <project_structure>
    <root_directory>[CUSTOMIZABLE: . | /workspace | /app]</root_directory>
    <source_directory>[CUSTOMIZABLE: src | app | lib | source]</source_directory>
    <test_directory>[CUSTOMIZABLE: tests | test | spec | __tests__ | testing]</test_directory>
    <docs_directory>[CUSTOMIZABLE: docs | documentation | wiki]</docs_directory>
    <scripts_directory>[CUSTOMIZABLE: scripts | bin | tools | automation]</scripts_directory>
    <config_directory>[CUSTOMIZABLE: config | .config | configuration | settings]</config_directory>
    <build_directory>[CUSTOMIZABLE: build | dist | out | target | release]</build_directory>
    <assets_directory>[OPTIONAL: assets | static | resources | media]</assets_directory>
    <data_directory>[OPTIONAL: data | datasets | storage | files]</data_directory>
    <deployment_directory>[OPTIONAL: deploy | deployment | k8s | docker]</deployment_directory>
  </project_structure>

  <!-- Quality Standards - Expert Configuration -->
  <quality_standards>
    <test_coverage>
      <threshold>[CUSTOMIZABLE: 0-100]</threshold>
      <enforcement>[REQUIRED: BLOCKING | CONDITIONAL | ADVISORY]</enforcement>
      <tool>[CUSTOMIZABLE: jest | pytest-cov | go-cover | nyc | jacoco | simplecov]</tool>
      <exclusions>[OPTIONAL: list of file patterns to exclude]</exclusions>
      <branch_coverage>[OPTIONAL: enabled | disabled]</branch_coverage>
      <mutation_testing>[OPTIONAL: enabled | disabled]</mutation_testing>
    </test_coverage>
    <performance>
      <response_time_p95>[CUSTOMIZABLE: ms]</response_time_p95>
      <response_time_p99>[CUSTOMIZABLE: ms]</response_time_p99>
      <memory_limit>[CUSTOMIZABLE: MB | GB]</memory_limit>
      <cpu_threshold>[OPTIONAL: percentage]</cpu_threshold>
      <database_query_limit>[OPTIONAL: ms]</database_query_limit>
      <api_rate_limits>[OPTIONAL: requests per second]</api_rate_limits>
    </performance>
    <code_quality>
      <linter>[CUSTOMIZABLE: with custom rules]</linter>
      <formatter>[CUSTOMIZABLE: with custom config]</formatter>
      <type_checker>[CUSTOMIZABLE: strict | moderate | disabled]</type_checker>
      <complexity_threshold>[OPTIONAL: cyclomatic complexity limit]</complexity_threshold>
      <duplication_threshold>[OPTIONAL: percentage]</duplication_threshold>
      <maintainability_index>[OPTIONAL: minimum score]</maintainability_index>
    </code_quality>
    <security>
      <static_analysis>[OPTIONAL: sonarqube | codeclimate | snyk]</static_analysis>
      <dependency_scanning>[OPTIONAL: enabled | disabled]</dependency_scanning>
      <secrets_scanning>[OPTIONAL: enabled | disabled]</secrets_scanning>
      <license_compliance>[OPTIONAL: strict | permissive]</license_compliance>
    </security>
  </quality_standards>

  <!-- Development Workflow - Expert Customization -->
  <development_workflow>
    <commands>
      <install>[CUSTOMIZABLE]</install>
      <test>[CUSTOMIZABLE]</test>
      <lint>[CUSTOMIZABLE]</lint>
      <build>[CUSTOMIZABLE]</build>
      <run>[CUSTOMIZABLE]</run>
      <format>[CUSTOMIZABLE]</format>
      <coverage>[OPTIONAL: custom coverage command]</coverage>
      <docs>[OPTIONAL: documentation generation]</docs>
      <package>[OPTIONAL: packaging command]</package>
      <deploy>[OPTIONAL: deployment command]</deploy>
    </commands>
    <git_workflow>
      <branch_pattern>[CUSTOMIZABLE]</branch_pattern>
      <commit_style>[CUSTOMIZABLE: conventional | angular | custom]</commit_style>
      <pr_template>[CUSTOMIZABLE: enabled | disabled | custom]</pr_template>
      <merge_strategy>[OPTIONAL: merge | squash | rebase]</merge_strategy>
      <protected_branches>[OPTIONAL: list of protected branches]</protected_branches>
      <required_reviews>[OPTIONAL: number of required reviews]</required_reviews>
    </git_workflow>
    <release_management>
      <versioning_strategy>[OPTIONAL: semantic | calendar | custom]</versioning_strategy>
      <changelog_generation>[OPTIONAL: automatic | manual]</changelog_generation>
      <release_notes>[OPTIONAL: automatic | manual]</release_notes>
    </release_management>
  </development_workflow>

  <!-- Token and Context Management - Advanced Tuning -->
  <context_management>
    <max_file_tokens>[CUSTOMIZABLE: 1000-8000]</max_file_tokens>
    <max_context_tokens>[CUSTOMIZABLE: 50000-200000]</max_context_tokens>
    <reserved_work_tokens>[CUSTOMIZABLE: 20000-100000]</reserved_work_tokens>
    <context_preservation_strategy>[OPTIONAL: aggressive | conservative | adaptive]</context_preservation_strategy>
    <token_optimization>[OPTIONAL: enabled | disabled]</token_optimization>
  </context_management>

  <!-- Domain-Specific Rules - Fully Customizable -->
  <domain_specific_rules>
    <rule>[CUSTOM RULE 1]</rule>
    <rule>[CUSTOM RULE 2]</rule>
    <rule>[CUSTOM RULE 3]</rule>
    <!-- Add as many custom rules as needed -->
  </domain_specific_rules>

  <!-- Custom Personas - Expert Configuration -->
  <custom_personas>
    <persona>
      <name>[CUSTOM PERSONA NAME]</name>
      <expertise>[DOMAIN EXPERTISE]</expertise>
      <tools>[SPECIALIZED TOOLS]</tools>
      <context>[SPECIFIC CONTEXT]</context>
      <temperature>[OPTIONAL: AI temperature override]</temperature>
    </persona>
    <!-- Add multiple custom personas -->
  </custom_personas>

  <!-- Security Requirements - Enterprise Level -->
  <security_requirements>
    <authentication>[ADVANCED: custom oauth | saml | ldap | multi-factor]</authentication>
    <authorization>[OPTIONAL: rbac | abac | custom]</authorization>
    <data_encryption>[ADVANCED: algorithms and key management]</data_encryption>
    <compliance>[MULTIPLE: list of compliance requirements]</compliance>
    <vulnerability_scanning>[ADVANCED: tools and schedules]</vulnerability_scanning>
    <threat_modeling>[OPTIONAL: enabled | disabled]</threat_modeling>
    <security_headers>[OPTIONAL: custom security headers]</security_headers>
    <audit_logging>[OPTIONAL: comprehensive audit requirements]</audit_logging>
  </security_requirements>

  <!-- Deployment Configuration - Enterprise Grade -->
  <deployment>
    <environment>[ADVANCED: multi-environment configuration]</environment>
    <ci_cd_tool>[ADVANCED: multiple tools and pipelines]</ci_cd_tool>
    <cloud_provider>[ADVANCED: multi-cloud | hybrid]</cloud_provider>
    <monitoring>[ADVANCED: comprehensive monitoring stack]</monitoring>
    <infrastructure_as_code>[OPTIONAL: terraform | cloudformation | pulumi]</infrastructure_as_code>
    <container_orchestration>[OPTIONAL: kubernetes | docker-swarm | nomad]</container_orchestration>
    <service_mesh>[OPTIONAL: istio | linkerd | consul]</service_mesh>
    <observability>
      <logging>[OPTIONAL: elk | splunk | cloudwatch]</logging>
      <metrics>[OPTIONAL: prometheus | datadog | newrelic]</metrics>
      <tracing>[OPTIONAL: jaeger | zipkin | aws-xray]</tracing>
    </observability>
  </deployment>

  <!-- Framework Behavior - Expert Tuning -->
  <framework_behavior>
    <file_creation_policy>[EXPERT: conservative | moderate | liberal | custom]</file_creation_policy>
    <documentation_generation>[EXPERT: automatic | on-request | disabled | custom]</documentation_generation>
    <test_first_enforcement>[EXPERT: strict | flexible | advisory | custom]</test_first_enforcement>
    <error_handling_strategy>[OPTIONAL: fail-fast | graceful | retry | custom]</error_handling_strategy>
    <ai_temperature>
      <factual>[EXPERT-TUNED: 0.0-1.0]</factual>
      <analysis>[EXPERT-TUNED: 0.0-1.0]</analysis>
      <creative>[EXPERT-TUNED: 0.0-1.0]</creative>
      <code_generation>[OPTIONAL: 0.0-1.0]</code_generation>
      <documentation>[OPTIONAL: 0.0-1.0]</documentation>
    </ai_temperature>
    <parallel_execution>[OPTIONAL: aggressive | conservative | disabled]</parallel_execution>
    <caching_strategy>[OPTIONAL: aggressive | conservative | disabled]</caching_strategy>
  </framework_behavior>

  <!-- Integration Points - Enterprise Integration -->
  <integrations>
    <external_apis>
      <api>
        <name>[API NAME]</name>
        <type>[REST | GraphQL | gRPC | WebSocket]</type>
        <authentication>[API KEY | OAuth | Basic | Custom]</authentication>
        <rate_limiting>[OPTIONAL]</rate_limiting>
        <circuit_breaker>[OPTIONAL]</circuit_breaker>
      </api>
      <!-- Multiple APIs supported -->
    </external_apis>
    <databases>
      <database>
        <type>[PostgreSQL | MySQL | MongoDB | Redis | etc.]</type>
        <orm>[SQLAlchemy | Sequelize | Mongoose | etc.]</orm>
        <connection_pooling>[OPTIONAL]</connection_pooling>
        <migration_strategy>[OPTIONAL]</migration_strategy>
      </database>
      <!-- Multiple databases supported -->
    </databases>
    <message_queues>
      <queue>
        <type>[RabbitMQ | Kafka | SQS | Redis]</queue>
        <patterns>[pub-sub | request-reply | work-queue]</patterns>
      </queue>
    </message_queues>
    <third_party_services>
      <service>
        <name>[SERVICE NAME]</name>
        <type>[payment | analytics | communication | etc.]</type>
        <configuration>[SERVICE-SPECIFIC CONFIG]</configuration>
      </service>
    </third_party_services>
  </integrations>

  <!-- Advanced Configuration Options -->
  <advanced_options>
    <feature_flags>
      <provider>[OPTIONAL: launchdarkly | flagsmith | custom]</provider>
      <strategy>[OPTIONAL: configuration strategy]</strategy>
    </feature_flags>
    <internationalization>
      <enabled>[OPTIONAL: true | false]</enabled>
      <default_locale>[OPTIONAL: en-US]</default_locale>
      <supported_locales>[OPTIONAL: list of locales]</supported_locales>
    </internationalization>
    <accessibility>
      <wcag_level>[OPTIONAL: A | AA | AAA]</wcag_level>
      <testing_tools>[OPTIONAL: axe | lighthouse | custom]</testing_tools>
    </accessibility>
    <performance_budgets>
      <bundle_size>[OPTIONAL: KB limit]</bundle_size>
      <lighthouse_score>[OPTIONAL: minimum score]</lighthouse_score>
      <core_web_vitals>[OPTIONAL: LCP | FID | CLS targets]</core_web_vitals>
    </performance_budgets>
  </advanced_options>
</project_configuration>