<?xml version="1.0" encoding="UTF-8"?>
<!-- 
PROJECT_CONFIG - TIER 2: STANDARD
2-minute setup for production-ready projects
Guided configuration with smart suggestions and key customizations
-->
<project_configuration version="1.0.0" tier="standard">
  <project_info>
    <name>[REQUIRED: Project Name]</name>
    <domain>[SELECT: web-development | mobile-engineering | data-analytics | platform-engineering | game-development | fintech | healthcare | e-commerce]</domain>
    <description>[OPTIONAL: Brief project description]</description>
    <primary_language>[AUTO-DETECT-WITH-OVERRIDE: {{detected-language}} | python | javascript | typescript | go | rust | java | swift | kotlin | c# | php]</primary_language>
    <framework_stack>[SMART-SUGGESTION: {{domain-based-suggestions}} | react+nextjs | vue+nuxt | django+postgres | rails+postgres | express+postgres | fastapi+postgres | spring+mysql | .net+sqlserver]</framework_stack>
  </project_info>

  <project_structure>
    <root_directory>.</root_directory>
    <source_directory>[SUGGESTED: {{framework-default}} | src | app | lib]</source_directory>
    <test_directory>[SUGGESTED: {{framework-default}} | tests | test | spec | __tests__]</test_directory>
    <docs_directory>docs</docs_directory>
    <scripts_directory>scripts</scripts_directory>
    <config_directory>config</config_directory>
    <build_directory>[SUGGESTED: {{framework-default}} | build | dist | out | target]</build_directory>
  </project_structure>

  <quality_standards>
    <test_coverage>
      <threshold>[DOMAIN-RECOMMENDED: {{domain-standard}} | 85 for web | 75 for data | 90 for fintech]</threshold>
      <enforcement>[RECOMMENDED: BLOCKING | CONDITIONAL | ADVISORY]</enforcement>
      <tool>[AUTO-DETECT: {{detected-tool}} | jest | pytest-cov | go-cover | cargo-test]</tool>
    </test_coverage>
    <performance>
      <response_time_p95>[DOMAIN-APPROPRIATE: {{domain-target}} | 200ms web | 5000ms data | 100ms trading]</response_time_p95>
      <response_time_p99>[DOMAIN-APPROPRIATE: {{calculated-from-p95}} | 500ms web | 10000ms data | 200ms trading]</response_time_p99>
      <memory_limit>[LANGUAGE-APPROPRIATE: {{calculated}} | 512MB web | 8GB data | 256MB mobile]</memory_limit>
    </performance>
    <code_quality>
      <linter>[AUTO-DETECT: {{detected-linter}} | eslint | pylint | golint | clippy]</linter>
      <formatter>[AUTO-DETECT: {{detected-formatter}} | prettier | black | gofmt | rustfmt]</formatter>
      <type_checker>[AUTO-DETECT: {{detected-checker}} | typescript | mypy | none]</type_checker>
    </code_quality>
  </quality_standards>

  <development_workflow>
    <commands>
      <install>[AUTO-DETECT: {{package-manager-command}}]</install>
      <test>[AUTO-DETECT: {{test-framework-command}}]</test>
      <lint>[AUTO-DETECT: {{linter-command}}]</lint>
      <build>[AUTO-DETECT: {{build-tool-command}}]</build>
      <run>[AUTO-DETECT: {{dev-server-command}}]</run>
      <format>[AUTO-DETECT: {{formatter-command}}]</format>
    </commands>
    <git_workflow>
      <branch_pattern>[RECOMMENDED: feature/* | feat/* | bugfix/*]</branch_pattern>
      <commit_style>[RECOMMENDED: conventional | descriptive]</commit_style>
      <pr_template>[RECOMMENDED: enabled | disabled]</pr_template>
    </git_workflow>
  </development_workflow>

  <domain_specific_rules>
    <!-- Dynamically populated based on selected domain -->
    {{domain-specific-rules-for-{{domain}}}}
  </domain_specific_rules>

  <framework_behavior>
    <file_creation_policy>[RECOMMENDED: conservative | moderate based on experience]</file_creation_policy>
    <documentation_generation>[RECOMMENDED: on-request | automatic for production]</documentation_generation>
    <test_first_enforcement>[DOMAIN-APPROPRIATE: strict for fintech | flexible for prototypes]</test_first_enforcement>
    <ai_temperature>
      <factual>[DOMAIN-TUNED: 0.1 fintech | 0.2 general]</factual>
      <analysis>[DOMAIN-TUNED: 0.2 data | 0.3 general]</analysis>
      <creative>[DOMAIN-TUNED: 0.5 gaming | 0.7 general]</creative>
    </ai_temperature>
  </framework_behavior>

  <context_management>
    <max_file_tokens>4000</max_file_tokens>
    <max_context_tokens>120000</max_context_tokens>
    <reserved_work_tokens>50000</reserved_work_tokens>
  </context_management>

  <security_requirements>
    <authentication>[DOMAIN-RECOMMENDED: {{domain-auth}} | oauth2 web | jwt api | session web-app]</authentication>
    <data_encryption>[DOMAIN-RECOMMENDED: {{domain-encryption}} | in-transit | at-rest | both]</data_encryption>
    <compliance>[DOMAIN-SPECIFIC: {{domain-compliance}} | GDPR web | HIPAA healthcare | PCI fintech | none]</compliance>
    <vulnerability_scanning>[AUTO-ENABLE-IF-AVAILABLE: {{scanning-tools}}]</vulnerability_scanning>
  </security_requirements>

  <!-- Optional deployment section - only if CI/CD detected -->
  <deployment condition="ci-cd-detected">
    <environment>[DETECTED: {{detected-deployment}} | docker | kubernetes | serverless]</environment>
    <ci_cd_tool>[DETECTED: {{detected-ci}} | github-actions | gitlab-ci | jenkins]</ci_cd_tool>
    <cloud_provider>[OPTIONAL: aws | gcp | azure | on-premise]</cloud_provider>
    <monitoring>[OPTIONAL: basic-logging | prometheus | datadog]</monitoring>
  </deployment>
</project_configuration>