#!/bin/bash
# Configuration Generation Script for /adapt-to-project command
# This script creates a project-config.yaml file from detection results

set -e

CONFIG_FILE="${1:-/tmp/project-detection.json}"
OUTPUT_DIR="${2:-.claude/config}"
OUTPUT_FILE="$OUTPUT_DIR/project-config.yaml"

if [ ! -f "$CONFIG_FILE" ]; then
    echo "❌ Error: Config file not found: $CONFIG_FILE"
    echo "Run detect-project.sh first to generate the configuration."
    exit 1
fi

echo "📝 Generating project configuration file..."

# Create config directory if it doesn't exist
mkdir -p "$OUTPUT_DIR"

# Read values from JSON (basic parsing without jq dependency)
PROJECT_NAME=$(grep '"project_name"' "$CONFIG_FILE" | sed 's/.*"project_name": *"\([^"]*\)".*/\1/')
DOMAIN=$(grep '"domain"' "$CONFIG_FILE" | sed 's/.*"domain": *"\([^"]*\)".*/\1/')
TECH_STACK=$(grep '"tech_stack"' "$CONFIG_FILE" | sed 's/.*"tech_stack": *"\([^"]*\)".*/\1/')
PRIMARY_LANGUAGE=$(grep '"primary_language"' "$CONFIG_FILE" | sed 's/.*"primary_language": *"\([^"]*\)".*/\1/')
TESTING_FRAMEWORK=$(grep '"testing_framework"' "$CONFIG_FILE" | sed 's/.*"testing_framework": *"\([^"]*\)".*/\1/')
CI_CD_PLATFORM=$(grep '"ci_cd_platform"' "$CONFIG_FILE" | sed 's/.*"ci_cd_platform": *"\([^"]*\)".*/\1/')

# Generate timestamp
TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')

# Create project-config.yaml
cat > "$OUTPUT_FILE" << EOF
# Project Configuration File
# Generated by /adapt-to-project command on $TIMESTAMP
# This file serves as a reference for project-specific values

project_config:
  metadata:
    name: "$PROJECT_NAME"
    domain: "$DOMAIN"
    generated_on: "$TIMESTAMP"
    
  placeholders:
    # Core project identifiers
    PROJECT_NAME: "$PROJECT_NAME"
    DOMAIN: "$DOMAIN"
    TECH_STACK: "$TECH_STACK"
    PRIMARY_LANGUAGE: "$PRIMARY_LANGUAGE"
    
    # Development tools
    TESTING_FRAMEWORK: "$TESTING_FRAMEWORK"
    CI_CD_PLATFORM: "$CI_CD_PLATFORM"
    
    # Default values (customize as needed)
    TEAM_SIZE: "small"
    WORKFLOW_TYPE: "agile"
    COMPANY_NAME: "YourCompany"
    USER_BASE: "users"
    SECURITY_LEVEL: "standard"
    PERFORMANCE_PRIORITY: "balanced"
    DEPLOYMENT_TARGET: "production"

# Notes:
# - This file is for reference only - Claude Code cannot read YAML files
# - To make changes, manually edit the individual command templates
# - Use /replace-placeholders to see what needs updating
# - Use /validate-adaptation to verify your customizations
EOF

echo "✅ Configuration file created: $OUTPUT_FILE"
echo ""
echo "📋 Generated Configuration Summary:"
echo "  Project: $PROJECT_NAME"
echo "  Domain: $DOMAIN"
echo "  Tech Stack: $TECH_STACK"
echo "  Language: $PRIMARY_LANGUAGE"
echo "  Testing: $TESTING_FRAMEWORK"
echo "  CI/CD: $CI_CD_PLATFORM"
echo ""
echo "📝 Next Steps:"
echo "  1. Review the generated configuration file"
echo "  2. Customize default values if needed"
echo "  3. Use /validate-adaptation to verify all placeholders were replaced"