{
  "search_customization_options": {
    "file_filtering": {
      "id": "file_filtering",
      "name": "üìÅ File Types",
      "description": "Control which files to search",
      "default": "all_code_files",
      "options": [
        {
          "id": "all_code_files",
          "label": "All code files (current)",
          "description": "JavaScript, Python, Java, C++, etc.",
          "implementation": "--glob '*.{js,py,java,cpp,ts,jsx,tsx,c,h}'"
        },
        {
          "id": "javascript_only",
          "label": "JavaScript/TypeScript only",
          "description": "JS, TS, JSX, TSX files",
          "implementation": "--glob '*.{js,ts,jsx,tsx}'"
        },
        {
          "id": "python_only", 
          "label": "Python only",
          "description": "Python source files",
          "implementation": "--glob '*.py'"
        },
        {
          "id": "config_files",
          "label": "Configuration files",
          "description": "JSON, YAML, XML, properties",
          "implementation": "--glob '*.{json,yaml,yml,xml,properties,config}'"
        },
        {
          "id": "all_files",
          "label": "All text files",
          "description": "Search in all readable files",
          "implementation": "--type-not binary"
        }
      ]
    },
    "search_scope": {
      "id": "search_scope",
      "name": "üîç Search Scope",
      "description": "Where to search for patterns",
      "default": "recursive",
      "options": [
        {
          "id": "recursive",
          "label": "All subdirectories (current)",
          "description": "Search recursively through project",
          "implementation": "recursive search enabled"
        },
        {
          "id": "current_only",
          "label": "Current directory only",
          "description": "Don't search subdirectories",
          "implementation": "--max-depth=1"
        },
        {
          "id": "exclude_tests",
          "label": "Exclude test files",
          "description": "Skip test/spec directories",
          "implementation": "--glob '!test/*' --glob '!*test*' --glob '!spec/*'"
        },
        {
          "id": "include_hidden",
          "label": "Include hidden files",
          "description": "Search .files and .directories",
          "implementation": "--hidden"
        },
        {
          "id": "exclude_deps",
          "label": "Exclude dependencies",
          "description": "Skip node_modules, vendor, etc.",
          "implementation": "--glob '!node_modules/*' --glob '!vendor/*' --glob '!.git/*'"
        }
      ]
    },
    "pattern_type": {
      "id": "pattern_type",
      "name": "üéØ Pattern Matching",
      "description": "How to interpret search patterns",
      "default": "smart_case",
      "options": [
        {
          "id": "smart_case",
          "label": "Smart case matching (current)",
          "description": "Case-insensitive unless uppercase used",
          "implementation": "--smart-case"
        },
        {
          "id": "exact_case",
          "label": "Exact case matching",
          "description": "Match exact case only",
          "implementation": "--case-sensitive"
        },
        {
          "id": "ignore_case",
          "label": "Ignore case completely",
          "description": "Always case-insensitive",
          "implementation": "--ignore-case"
        },
        {
          "id": "regex_mode",
          "label": "Regular expressions",
          "description": "Use regex pattern matching",
          "implementation": "--regex"
        },
        {
          "id": "fixed_strings",
          "label": "Fixed string matching",
          "description": "No pattern interpretation",
          "implementation": "--fixed-strings"
        }
      ]
    },
    "output_format": {
      "id": "output_format",
      "name": "üìä Output Format",
      "description": "How to display search results",
      "default": "standard",
      "options": [
        {
          "id": "standard",
          "label": "File list with line numbers (current)",
          "description": "filename:line: matching content",
          "implementation": "--line-number --no-heading"
        },
        {
          "id": "context",
          "label": "Show context lines",
          "description": "Include lines before/after matches",
          "implementation": "--line-number --context=3"
        },
        {
          "id": "files_only",
          "label": "File names only", 
          "description": "Just list files containing matches",
          "implementation": "--files-with-matches"
        },
        {
          "id": "count_only",
          "label": "Count per file",
          "description": "Show number of matches per file",
          "implementation": "--count"
        },
        {
          "id": "detailed",
          "label": "Detailed with file info",
          "description": "Include file size, modified date",
          "implementation": "--line-number --stats"
        }
      ]
    },
    "result_sorting": {
      "id": "result_sorting",
      "name": "üî¢ Result Sorting",
      "description": "Order of search results",
      "default": "file_path",
      "options": [
        {
          "id": "file_path", 
          "label": "By file path (current)",
          "description": "Alphabetical file order",
          "implementation": "sort by path"
        },
        {
          "id": "match_count",
          "label": "By number of matches",
          "description": "Files with most matches first",
          "implementation": "sort by match count descending"
        },
        {
          "id": "file_size",
          "label": "By file size",
          "description": "Largest files first",
          "implementation": "sort by file size descending"
        },
        {
          "id": "modified_date",
          "label": "By modification date",
          "description": "Most recently modified first",
          "implementation": "sort by mtime descending"
        },
        {
          "id": "relevance",
          "label": "By relevance score",
          "description": "Best matches first",
          "implementation": "sort by relevance score"
        }
      ]
    }
  },
  "intelligence_rules": {
    "show_options_based_on_description": {
      "security": ["file_filtering", "pattern_type", "output_format"],
      "todo": ["file_filtering", "search_scope", "output_format"],
      "import": ["file_filtering", "pattern_type", "result_sorting"],
      "function": ["file_filtering", "pattern_type", "output_format", "result_sorting"],
      "config": ["file_filtering", "search_scope", "output_format"],
      "error": ["file_filtering", "pattern_type", "output_format"],
      "default": ["file_filtering", "search_scope", "output_format"]
    },
    "smart_defaults_based_on_description": {
      "security": {
        "file_filtering": "all_code_files",
        "pattern_type": "regex_mode",
        "output_format": "detailed"
      },
      "todo|fixme": {
        "file_filtering": "all_code_files", 
        "search_scope": "exclude_tests",
        "output_format": "context"
      },
      "import|require": {
        "file_filtering": "javascript_only",
        "pattern_type": "regex_mode",
        "result_sorting": "file_path"
      },
      "config": {
        "file_filtering": "config_files",
        "search_scope": "exclude_deps",
        "output_format": "files_only"
      }
    }
  },
  "validation_rules": {
    "required_combinations": [],
    "incompatible_combinations": [
      ["files_only", "context"],
      ["count_only", "detailed"]
    ],
    "performance_warnings": {
      "all_files + include_hidden + regex_mode": "This combination may be slow on large projects",
      "detailed + context": "Detailed output with context produces large results"
    }
  }
}