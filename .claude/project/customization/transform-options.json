{
  "transform_customization_options": {
    "input_selection": {
      "id": "input_selection",
      "name": "üìÅ Input Files",
      "description": "Which files to transform",
      "default": "smart_detection",
      "options": [
        {
          "id": "smart_detection",
          "label": "Smart file detection (current)",
          "description": "Auto-detect relevant files based on transform type",
          "implementation": "auto_detect_based_on_transform_type"
        },
        {
          "id": "specific_pattern",
          "label": "Specific file pattern",
          "description": "Use custom glob pattern",
          "implementation": "user_specified_glob_pattern"
        },
        {
          "id": "single_directory",
          "label": "Single directory",
          "description": "Transform files in one directory only",
          "implementation": "single_directory_mode"
        },
        {
          "id": "recursive_search",
          "label": "Recursive directory search",
          "description": "Find files in all subdirectories",
          "implementation": "recursive_glob_search"
        },
        {
          "id": "file_list",
          "label": "Specific file list",
          "description": "Provide exact list of files",
          "implementation": "explicit_file_list"
        }
      ]
    },
    "backup_strategy": {
      "id": "backup_strategy",
      "name": "üíæ Backup Strategy",
      "description": "How to protect original files",
      "default": "simple_backup",
      "options": [
        {
          "id": "no_backup",
          "label": "No backup",
          "description": "Transform in-place (faster but risky)",
          "implementation": "backup: false"
        },
        {
          "id": "simple_backup",
          "label": "Simple .bak files (current)",
          "description": "Create filename.ext.bak before transform",
          "implementation": "backup: 'simple'"
        },
        {
          "id": "timestamped_backup",
          "label": "Timestamped backups",
          "description": "filename.ext.2024-01-15-143052.bak",
          "implementation": "backup: 'timestamped'"
        },
        {
          "id": "backup_directory",
          "label": "Backup directory",
          "description": "Copy originals to .backup/ folder",
          "implementation": "backup: 'directory'"
        },
        {
          "id": "git_staging",
          "label": "Git staging area",
          "description": "Use git to track changes",
          "implementation": "backup: 'git'"
        }
      ]
    },
    "processing_mode": {
      "id": "processing_mode",
      "name": "‚öôÔ∏è Processing Mode",
      "description": "How to handle the transformation",
      "default": "safe_mode",
      "options": [
        {
          "id": "safe_mode",
          "label": "Safe mode (current)",
          "description": "Validate before and after transform",
          "implementation": "validate_input: true, validate_output: true"
        },
        {
          "id": "fast_mode",
          "label": "Fast mode",
          "description": "Skip validation for speed",
          "implementation": "validate_input: false, validate_output: false"
        },
        {
          "id": "strict_mode",
          "label": "Strict validation",
          "description": "Extensive validation and error checking",
          "implementation": "strict_validation: true, stop_on_error: true"
        },
        {
          "id": "permissive_mode",
          "label": "Permissive mode",
          "description": "Continue on errors, attempt best effort",
          "implementation": "continue_on_error: true, best_effort: true"
        },
        {
          "id": "dry_run",
          "label": "Dry run preview",
          "description": "Show what would change without doing it",
          "implementation": "dry_run: true"
        }
      ]
    },
    "output_handling": {
      "id": "output_handling",
      "name": "üì§ Output Handling",
      "description": "Where to place transformed files",
      "default": "in_place",
      "options": [
        {
          "id": "in_place",
          "label": "In-place modification (current)",
          "description": "Replace original files",
          "implementation": "output_mode: 'in_place'"
        },
        {
          "id": "new_directory",
          "label": "New directory",
          "description": "Create transformed files in new folder",
          "implementation": "output_mode: 'new_directory'"
        },
        {
          "id": "parallel_structure",
          "label": "Parallel directory structure",
          "description": "Mirror structure in output folder",
          "implementation": "output_mode: 'parallel'"
        },
        {
          "id": "suffix_naming",
          "label": "Add suffix to names",
          "description": "file.js ‚Üí file.transformed.js",
          "implementation": "output_mode: 'suffix'"
        },
        {
          "id": "extension_change",
          "label": "Change file extension",
          "description": "file.json ‚Üí file.yaml",
          "implementation": "output_mode: 'extension_change'"
        }
      ]
    },
    "error_handling": {
      "id": "error_handling",
      "name": "‚ö†Ô∏è Error Handling",
      "description": "What to do when transformation fails",
      "default": "skip_and_continue",
      "options": [
        {
          "id": "stop_on_error",
          "label": "Stop on first error",
          "description": "Halt entire process on any failure",
          "implementation": "on_error: 'stop'"
        },
        {
          "id": "skip_and_continue",
          "label": "Skip failed files (current)",
          "description": "Continue with remaining files",
          "implementation": "on_error: 'skip'"
        },
        {
          "id": "attempt_recovery",
          "label": "Attempt error recovery",
          "description": "Try alternative approaches on failure",
          "implementation": "on_error: 'recover'"
        },
        {
          "id": "partial_transform",
          "label": "Allow partial transformation",
          "description": "Save partial results when possible",
          "implementation": "on_error: 'partial'"
        },
        {
          "id": "rollback_on_error",
          "label": "Rollback on any error",
          "description": "Undo all changes if any file fails",
          "implementation": "on_error: 'rollback'"
        }
      ]
    },
    "verification": {
      "id": "verification",
      "name": "‚úÖ Verification",
      "description": "How to verify transformation success",
      "default": "basic_checks",
      "options": [
        {
          "id": "no_verification",
          "label": "No verification",
          "description": "Trust transformation completed correctly",
          "implementation": "verify: false"
        },
        {
          "id": "basic_checks",
          "label": "Basic checks (current)",
          "description": "File exists and is readable",
          "implementation": "verify: 'basic'"
        },
        {
          "id": "format_validation",
          "label": "Format validation",
          "description": "Verify output format is valid",
          "implementation": "verify: 'format'"
        },
        {
          "id": "content_comparison",
          "label": "Content comparison",
          "description": "Compare input vs output semantics",
          "implementation": "verify: 'content'"
        },
        {
          "id": "comprehensive",
          "label": "Comprehensive verification",
          "description": "All validation checks",
          "implementation": "verify: 'comprehensive'"
        }
      ]
    }
  },
  "intelligence_rules": {
    "show_options_based_on_description": {
      "json.*yaml|yaml.*json": ["input_selection", "backup_strategy", "verification"],
      "format.*conversion|convert.*format": ["input_selection", "output_handling", "verification"],
      "rename|renaming": ["input_selection", "backup_strategy", "error_handling"],
      "modernize|upgrade": ["backup_strategy", "processing_mode", "verification"],
      "minify|compress": ["input_selection", "output_handling", "verification"],
      "batch.*process": ["processing_mode", "error_handling", "verification"],
      "default": ["input_selection", "backup_strategy", "output_handling"]
    },
    "smart_defaults_based_on_description": {
      "json.*yaml|yaml.*json": {
        "backup_strategy": "simple_backup",
        "verification": "format_validation",
        "output_handling": "extension_change"
      },
      "rename|renaming": {
        "backup_strategy": "git_staging",
        "error_handling": "skip_and_continue",
        "processing_mode": "safe_mode"
      },
      "minify|compress": {
        "output_handling": "suffix_naming",
        "verification": "basic_checks",
        "backup_strategy": "no_backup"
      },
      "modernize|upgrade": {
        "backup_strategy": "timestamped_backup",
        "processing_mode": "strict_mode",
        "verification": "comprehensive"
      }
    }
  },
  "validation_rules": {
    "required_combinations": [
      ["no_backup", "dry_run"]
    ],
    "incompatible_combinations": [
      ["no_backup", "rollback_on_error"],
      ["fast_mode", "comprehensive"],
      ["stop_on_error", "skip_and_continue"]
    ],
    "safety_warnings": {
      "no_backup + in_place + fast_mode": "‚ö†Ô∏è High risk: No backup with fast in-place modification",
      "rollback_on_error + new_directory": "‚ö†Ô∏è Rollback won't work with new directory output",
      "stop_on_error + large_file_set": "‚ö†Ô∏è May leave transformation incomplete"
    }
  },
  "transform_types": {
    "format_conversion": {
      "common_patterns": ["json‚Üíyaml", "yaml‚Üíjson", "csv‚Üíjson", "xml‚Üíjson"],
      "recommended_options": ["backup_strategy", "verification", "output_handling"]
    },
    "code_transformation": {
      "common_patterns": ["es5‚Üíes6", "commonjs‚Üíesm", "sass‚Üícss"],
      "recommended_options": ["backup_strategy", "processing_mode", "verification"]
    },
    "batch_operations": {
      "common_patterns": ["rename files", "move files", "modify content"],
      "recommended_options": ["processing_mode", "error_handling", "verification"]
    }
  }
}