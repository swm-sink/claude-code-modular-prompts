{
  "id": "prompt-generator-meta",
  "version": "1.0.0",
  "category": "templates",
  "name": "Prompt Generator Meta-Template",
  "description": "Generates new prompt templates based on requirements and best practices",
  "prompt": {
    "template": "Create a new prompt template for the Claude Code framework with the following specifications:\n\n## Purpose\n{{purpose}}\n\n## Category\n{{category}} - {{category_description}}\n\n## Requirements\n{{#each requirements}}\n- {{this}}\n{{/each}}\n\n## Expected Inputs\n{{#each expected_inputs}}\n- **{{this.name}}** ({{this.type}}): {{this.description}}\n{{/each}}\n\n## Expected Output\n- **Format**: {{output_format}}\n- **Structure**: {{output_structure}}\n{{#if output_examples}}\n- **Examples**:\n{{#each output_examples}}\n  - {{this}}\n{{/each}}\n{{/if}}\n\n## Quality Criteria\n{{#each quality_criteria}}\n- {{this}}\n{{/each}}\n\n## Performance Requirements\n- **Token Budget**: {{token_budget}}\n- **Complexity**: {{complexity_level}}\n- **Timeout**: {{timeout_seconds}} seconds\n\n{{#if special_considerations}}\n## Special Considerations\n{{#each special_considerations}}\n- {{this}}\n{{/each}}\n{{/if}}\n\n## Deliverables\n1. Complete JSON prompt file following the schema\n2. Template with proper variable placeholders\n3. Comprehensive variable definitions\n4. At least 2 usage examples\n5. Appropriate metadata and tags\n6. Performance estimates\n7. Validation criteria\n\nGenerate a production-ready prompt template that follows all framework conventions and best practices.",
    "variables": [
      {
        "name": "purpose",
        "description": "What the prompt should accomplish",
        "type": "string",
        "required": true,
        "examples": [
          "Analyze code for security vulnerabilities",
          "Generate unit tests for a component"
        ]
      },
      {
        "name": "category",
        "description": "Primary category for the prompt",
        "type": "string",
        "required": true,
        "examples": ["queries", "features", "reviews", "patterns"]
      },
      {
        "name": "category_description",
        "description": "Description of what this category is for",
        "type": "string",
        "required": true
      },
      {
        "name": "requirements",
        "description": "Specific requirements the prompt must fulfill",
        "type": "array",
        "required": true,
        "examples": [
          ["Must handle multiple programming languages", "Should provide actionable recommendations"]
        ]
      },
      {
        "name": "expected_inputs",
        "description": "Variables the prompt will accept",
        "type": "array",
        "required": true,
        "examples": [
          [
            {
              "name": "file_path",
              "type": "string",
              "description": "Path to the file to analyze"
            }
          ]
        ]
      },
      {
        "name": "output_format",
        "description": "Format of the expected output",
        "type": "string",
        "required": true,
        "examples": ["markdown", "json", "code", "mixed"]
      },
      {
        "name": "output_structure",
        "description": "Structure of the output",
        "type": "string",
        "required": true,
        "examples": [
          "Structured report with sections",
          "JSON object with specific fields"
        ]
      },
      {
        "name": "output_examples",
        "description": "Examples of expected output",
        "type": "array",
        "required": false
      },
      {
        "name": "quality_criteria",
        "description": "Success criteria for the prompt",
        "type": "array",
        "required": true,
        "examples": [
          ["Identifies all issues", "Provides fix examples", "Includes severity ratings"]
        ]
      },
      {
        "name": "token_budget",
        "description": "Estimated token usage",
        "type": "string",
        "required": true,
        "examples": ["500-800", "1000-1500", "2000+"]
      },
      {
        "name": "complexity_level",
        "description": "Computational complexity",
        "type": "string",
        "required": true,
        "examples": ["low", "medium", "high"]
      },
      {
        "name": "timeout_seconds",
        "description": "Recommended timeout",
        "type": "number",
        "required": true,
        "default": 60
      },
      {
        "name": "special_considerations",
        "description": "Any special requirements or constraints",
        "type": "array",
        "required": false,
        "examples": [
          ["Must work with legacy code", "Should handle large files efficiently"]
        ]
      }
    ],
    "examples": [
      {
        "variables": {
          "purpose": "Analyze Python code for async/await best practices",
          "category": "queries",
          "category_description": "Information retrieval and analysis prompts",
          "requirements": [
            "Identify async anti-patterns",
            "Suggest performance improvements",
            "Check for proper error handling"
          ],
          "expected_inputs": [
            {
              "name": "file_path",
              "type": "string",
              "description": "Python file to analyze"
            },
            {
              "name": "include_examples",
              "type": "boolean",
              "description": "Include code examples in output"
            }
          ],
          "output_format": "markdown",
          "output_structure": "Sectioned report with findings, recommendations, and examples",
          "quality_criteria": [
            "Identifies all async issues",
            "Provides Python 3.11+ recommendations",
            "Includes performance impact"
          ],
          "token_budget": "800-1200",
          "complexity_level": "medium",
          "timeout_seconds": 45
        },
        "result": "Create a new prompt template for the Claude Code framework..."
      }
    ]
  },
  "metadata": {
    "created": "2024-01-06T00:00:00Z",
    "updated": "2024-01-06T00:00:00Z",
    "author": "system",
    "tags": ["meta", "generator", "template", "prompt-creation"],
    "dependencies": []
  },
  "performance": {
    "estimatedTokens": 1000,
    "complexity": "medium",
    "timeout": 60
  },
  "validation": {
    "outputFormat": "json",
    "outputSchema": {
      "type": "object",
      "required": ["id", "version", "category", "name", "description", "prompt", "metadata"],
      "properties": {
        "id": {"type": "string"},
        "version": {"type": "string"},
        "category": {"type": "string"},
        "name": {"type": "string"},
        "description": {"type": "string"},
        "prompt": {"type": "object"},
        "metadata": {"type": "object"}
      }
    },
    "successCriteria": [
      "Valid JSON structure",
      "Follows naming conventions",
      "Includes all required fields",
      "Has comprehensive examples"
    ]
  }
}