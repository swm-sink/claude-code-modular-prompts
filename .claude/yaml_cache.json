{
  "yaml_metadata": {
    ".claude/commands/find-duplicates.md": {
      "metadata": {
        "name": "/find-duplicates",
        "description": "Find duplicate files in your project",
        "usage": "[file-pattern] [--type extension]",
        "allowed-tools": [
          "Glob",
          "Read",
          "Grep"
        ],
        "category": "find-duplicates.md"
      },
      "file_size": 1652,
      "modified": 1753900430.835686
    },
    ".claude/commands/database/db-backup.md": {
      "metadata": {
        "name": "/db-backup",
        "description": "Backup [INSERT_DATABASE_TYPE] database for [INSERT_PROJECT_NAME]",
        "usage": "/db-backup [--full|--incremental] [--destination path]",
        "category": "database",
        "allowed-tools": [
          "Bash",
          "Write",
          "Read"
        ],
        "security": "input-validation-framework.md"
      },
      "file_size": 3388,
      "modified": 1753900430.8234966
    },
    ".claude/commands/database/db-seed.md": {
      "metadata": {
        "name": "/db-seed",
        "description": "Seed [INSERT_DATABASE_TYPE] with test data for [INSERT_PROJECT_NAME]",
        "usage": "/db-seed [--environment dev|test|staging] [--dataset minimal|standard|full]",
        "category": "database",
        "allowed-tools": [
          "Bash",
          "Read",
          "Write",
          "Edit"
        ],
        "security": "input-validation-framework.md"
      },
      "file_size": 4719,
      "modified": 1753900430.8254337
    },
    ".claude/commands/database/db-migrate.md": {
      "metadata": {
        "name": "/db-migrate",
        "description": "Safe database migration for your project's database system",
        "usage": "/db-migrate [up|down|status|create] [migration-name]",
        "category": "database",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep"
        ]
      },
      "file_size": 3295,
      "modified": 1753900430.8239665
    },
    ".claude/commands/database/db-restore.md": {
      "metadata": {
        "name": "/db-restore",
        "description": "Restore [INSERT_DATABASE_TYPE] database for [INSERT_PROJECT_NAME] from backup",
        "usage": "/db-restore [backup-file] [--target environment] [--validate]",
        "category": "database",
        "allowed-tools": [
          "Bash",
          "Read",
          "Write"
        ],
        "security": "input-validation-framework.md"
      },
      "file_size": 4990,
      "modified": 1753900430.824743
    },
    ".claude/commands/devops/pipeline.md": {
      "metadata": {
        "name": "/pipeline",
        "description": "Unified intelligent pipeline orchestration with creation, execution, monitoring, deployment, and CI/CD integration",
        "usage": "[mode] [pipeline_name] [options]",
        "allowed-tools": [
          "Task",
          "TodoWrite",
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep",
          "Glob"
        ],
        "category": "devops"
      },
      "file_size": 3904,
      "modified": 1753900430.832032
    },
    ".claude/commands/devops/cd-rollback.md": {
      "metadata": {
        "name": "/cd-rollback",
        "description": "Rollback lusaka deployment on Cloud Server",
        "usage": "/cd-rollback [--version previous-version] [--environment production|staging] [--emergency]",
        "category": "devops",
        "allowed-tools": [
          "Bash",
          "Read",
          "Write",
          "Edit"
        ]
      },
      "file_size": 2576,
      "modified": 1753900430.8293188
    },
    ".claude/commands/devops/deploy.md": {
      "metadata": {
        "name": "/deploy",
        "description": "Deploy lusaka to Cloud Server using GitHub Actions",
        "usage": "/deploy [environment] [--strategy blue-green|canary|rolling]",
        "category": "devops",
        "allowed-tools": [
          "Bash",
          "Read",
          "Write",
          "Edit"
        ]
      },
      "file_size": 5092,
      "modified": 1753900430.83139
    },
    ".claude/commands/devops/ci-setup.md": {
      "metadata": {
        "name": "/ci-setup",
        "description": "Configure GitHub Actions pipelines for lusaka",
        "usage": "/ci-setup [--template basic|standard|advanced] [--branch main|develop|feature/*]",
        "category": "devops",
        "allowed-tools": [
          "Write",
          "Read",
          "Edit",
          "Bash"
        ],
        "security": "input-validation-framework.md"
      },
      "file_size": 4796,
      "modified": 1753900430.8307006
    },
    ".claude/commands/devops/ci-run.md": {
      "metadata": {
        "name": "/ci-run",
        "description": "Execute GitHub Actions pipelines for lusaka",
        "usage": "/ci-run [pipeline-name] [--branch branch-name] [--stage specific-stage]",
        "category": "devops",
        "allowed-tools": [
          "Bash",
          "Read",
          "Write"
        ],
        "security": "input-validation-framework.md"
      },
      "file_size": 4943,
      "modified": 1753900430.8299673
    },
    ".claude/commands/core/quick-dev.md": {
      "metadata": {
        "name": "/quick-dev",
        "description": "Instant development assistance - works with any codebase",
        "usage": "/quick-dev [--review | --debug | --optimize | --explain] [file-path]",
        "category": "core",
        "allowed-tools": [
          "Read",
          "Edit",
          "Bash",
          "Grep",
          "Glob"
        ]
      },
      "file_size": 2868,
      "modified": 1753900430.8190331
    },
    ".claude/commands/core/auto.md": {
      "metadata": {
        "name": "/auto",
        "description": "Intelligent command router that selects the best command for your request",
        "usage": "[your request in natural language]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Grep",
          "Glob",
          "Bash"
        ],
        "category": "core"
      },
      "file_size": 1167,
      "modified": 1753900430.816213
    },
    ".claude/commands/core/project.md": {
      "metadata": {
        "name": "/project",
        "description": "Comprehensive project management suite with setup, provisioning, workflow orchestration, scheduling, tracking, and deployment operations",
        "usage": "[mode] [target] [options]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep"
        ],
        "category": "core"
      },
      "file_size": 21227,
      "modified": 1753900430.8179994
    },
    ".claude/commands/core/project-task.md": {
      "metadata": {
        "name": "/project-task",
        "description": "Create tasks specific to lusaka using devops-focused methodology",
        "usage": "/project-task [feature|bug|refactor] [description]",
        "category": "core",
        "allowed-tools": [
          "TodoWrite",
          "Read",
          "Edit"
        ],
        "security": "input-validation-framework.md"
      },
      "file_size": 3216,
      "modified": 1753900430.8173118
    },
    ".claude/commands/core/help.md": {
      "metadata": {
        "name": "/help",
        "description": "Helpful guide to available commands and best practices for lusaka",
        "usage": "[command_name]",
        "allowed-tools": [
          "Read",
          "Grep"
        ],
        "category": "core"
      },
      "file_size": 1420,
      "modified": 1753900430.816751
    },
    ".claude/commands/core/quick-help.md": {
      "metadata": {
        "name": "/quick-help",
        "description": "Quick command guide that works immediately - no customization needed",
        "usage": "/quick-help [command-name]",
        "category": "core",
        "allowed-tools": [
          "Read",
          "Grep"
        ]
      },
      "file_size": 2191,
      "modified": 1753900430.819515
    },
    ".claude/commands/core/research.md": {
      "metadata": {
        "name": "/research",
        "description": "Research framework for software-development topics relevant to lusaka",
        "usage": "/research [topic] [--depth shallow|standard|comprehensive] [--focus technical|business|competitive]",
        "category": "core",
        "allowed-tools": [
          "Read",
          "Write",
          "Grep",
          "WebSearch"
        ]
      },
      "file_size": 1321,
      "modified": 1753900430.8217142
    },
    ".claude/commands/core/query.md": {
      "metadata": {
        "name": "/query",
        "description": "Intelligent codebase query and analysis for lusaka with Python understanding",
        "usage": "/query \"[question about your codebase]\"",
        "category": "core",
        "allowed-tools": [
          "Read",
          "Grep",
          "Glob"
        ]
      },
      "file_size": 2594,
      "modified": 1753900430.8184936
    },
    ".claude/commands/core/quick-task.md": {
      "metadata": {
        "name": "/quick-task",
        "description": "Universal task execution - works with any project or language",
        "usage": "/quick-task \"description of what you want to accomplish\"",
        "category": "core",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "MultiEdit",
          "Bash",
          "Glob",
          "Grep"
        ]
      },
      "file_size": 2026,
      "modified": 1753900430.820521
    },
    ".claude/commands/core/task.md": {
      "metadata": {
        "name": "/task",
        "description": "Execute a focused development task with best practices for lusaka",
        "usage": "[task_description]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Grep",
          "Glob",
          "Bash"
        ],
        "category": "core"
      },
      "file_size": 1029,
      "modified": 1753900430.822177
    },
    ".claude/commands/core/quick-test.md": {
      "metadata": {
        "name": "/quick-test",
        "description": "Universal testing assistance - works with any testing framework",
        "usage": "/quick-test [--generate | --run | --fix | --strategy] [test-target]",
        "category": "core",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep",
          "Glob"
        ]
      },
      "file_size": 4591,
      "modified": 1753900430.8211238
    },
    ".claude/commands/core/quick-quality.md": {
      "metadata": {
        "name": "/quick-quality",
        "description": "Instant code quality analysis - works with any programming language",
        "usage": "/quick-quality [--scan | --fix | --report] [file-pattern]",
        "category": "core",
        "allowed-tools": [
          "Read",
          "Edit",
          "Bash",
          "Grep",
          "Glob"
        ]
      },
      "file_size": 3920,
      "modified": 1753900430.8200293
    },
    ".claude/commands/quality/integration-testing-baseline.md": {
      "metadata": {
        "name": "/integration-testing-baseline",
        "description": "Integration Testing Baseline Report",
        "allowed-tools": [
          "Read",
          "Grep",
          "Glob"
        ],
        "category": "quality"
      },
      "file_size": 6217,
      "modified": 1753900430.8509934
    },
    ".claude/commands/quality/validate-command.md": {
      "metadata": {
        "name": "/validate-command",
        "description": "Systematic command validation using Claude 4 prompting and context engineering best practices",
        "usage": "/validate-command [command-file-path] [validation-depth]",
        "category": "quality",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep",
          "Glob"
        ]
      },
      "file_size": 12145,
      "modified": 1753900430.8549774
    },
    ".claude/commands/quality/integration-test-matrices.md": {
      "metadata": {
        "name": "/integration-test-matrices",
        "description": "Integration Test Matrices for Phase 2",
        "allowed-tools": [
          "Read",
          "Grep",
          "Glob"
        ],
        "category": "quality"
      },
      "file_size": 12796,
      "modified": 1753900430.850426
    },
    ".claude/commands/quality/analyze-system.md": {
      "metadata": {
        "name": "/analyze-system",
        "description": "Comprehensive system analysis with performance profiling, dependency analysis, cost optimization, and quality assessments",
        "usage": "[focus_mode] [analysis_depth] [target_path]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep"
        ],
        "category": "quality"
      },
      "file_size": 9547,
      "modified": 1753900430.8498533
    },
    ".claude/commands/quality/PERFORMANCE-INTEGRATION-REPORT.md": {
      "metadata": {
        "name": "/performance-integration-report",
        "description": "Performance Integration Benchmarking Report",
        "allowed-tools": [
          "Read",
          "Grep",
          "Glob",
          "Bash"
        ],
        "category": "quality"
      },
      "file_size": 9777,
      "modified": 1753900430.8486202
    },
    ".claude/commands/quality/quality.md": {
      "metadata": {
        "name": "/quality",
        "description": "Unified intelligent code quality analysis with comprehensive review, metrics calculation, reporting, and improvement suggestions",
        "usage": "[mode] [target_path] [options]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep"
        ],
        "security": "input-validation-framework.md",
        "category": "quality"
      },
      "file_size": 4008,
      "modified": 1753900430.8527343
    },
    ".claude/commands/quality/monitor.md": {
      "metadata": {
        "name": "/monitor",
        "description": "Comprehensive monitoring system with setup, alerts, dashboards, status monitoring, and configuration management",
        "usage": "[subcommand] [options]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep"
        ],
        "category": "quality"
      },
      "file_size": 9430,
      "modified": 1753900430.8516507
    },
    ".claude/commands/quality/quality-enforce.md": {
      "metadata": {
        "name": "/quality-enforce",
        "description": "Enforces code quality standards using configurable quality gates",
        "usage": "",
        "allowed-tools": [
          "Bash",
          "Read",
          "Grep",
          "Glob"
        ],
        "category": "quality"
      },
      "file_size": 3561,
      "modified": 1753900430.8521972
    },
    ".claude/commands/quality/test.md": {
      "metadata": {
        "name": "/test",
        "description": "Unified intelligent testing framework with automated test generation, comprehensive coverage analysis, environment management, and multi-format reporting",
        "usage": "[type] [target] [options]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep"
        ],
        "category": "quality"
      },
      "file_size": 10680,
      "modified": 1753900430.8541307
    },
    ".claude/commands/quality/validate-component.md": {
      "metadata": {
        "name": "/validate-component",
        "description": "Systematic component validation using context engineering and integration testing",
        "usage": "/validate-component [component-path] [validation-scope]",
        "category": "quality",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep",
          "Glob"
        ]
      },
      "file_size": 2343,
      "modified": 1753900430.855635
    },
    ".claude/commands/quality/analyze-code.md": {
      "metadata": {
        "name": "/analyze-code",
        "description": "Unified code analysis with intelligent pattern detection, quality assessment, security review, and architectural insights",
        "usage": "[focus_mode] [target_path]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep"
        ],
        "category": "quality"
      },
      "file_size": 3290,
      "modified": 1753900430.8492534
    },
    ".claude/commands/quality/test-integration.md": {
      "metadata": {
        "name": "/test-integration",
        "description": "Execute comprehensive integration testing including advanced failure scenarios and emergency response validation",
        "usage": "[scenario-type] (e.g., 'advanced-failures', 'emergency-fallback', 'all')",
        "category": "quality",
        "allowed-tools": [
          "Read",
          "Bash",
          "Write"
        ]
      },
      "file_size": 6290,
      "modified": 1753900430.8533623
    },
    ".claude/commands/data-science/notebook-run.md": {
      "metadata": {
        "name": "/notebook-run",
        "description": "Execute Jupyter notebooks for [INSERT_PROJECT_NAME] with parameter injection and monitoring",
        "usage": "/notebook-run [notebook-path] [--params key=value] [--kernel python3|R|julia] [--output-dir path]",
        "category": "data-science",
        "allowed-tools": [
          "Bash",
          "Read",
          "Write"
        ],
        "security": [
          "path-validation"
        ]
      },
      "file_size": 6240,
      "modified": 1753900430.8228817
    },
    ".claude/commands/security/secure-audit.md": {
      "metadata": {
        "name": "/secure-audit",
        "description": "Comprehensive code audit for [INSERT_PROJECT_NAME] with [INSERT_SECURITY_LEVEL] requirements",
        "usage": "/secure-audit [--scope full|code|infrastructure|compliance] [--report-format detailed|executive|compliance]",
        "category": "security",
        "allowed-tools": [
          "Bash",
          "Read",
          "Write",
          "Grep"
        ]
      },
      "file_size": 3410,
      "modified": 1753900430.8562071
    },
    ".claude/commands/security/secure-scan.md": {
      "metadata": {
        "name": "/secure-scan",
        "description": "Code analysis for [INSERT_PROJECT_NAME] with [INSERT_SECURITY_LEVEL] requirements",
        "usage": "/secure-scan [--type vulnerability|sast|dast|all] [--severity critical|high|medium|low]",
        "category": "security",
        "allowed-tools": [
          "Bash",
          "Read",
          "Write",
          "Grep"
        ]
      },
      "file_size": 2169,
      "modified": 1753900430.856917
    },
    ".claude/commands/development/env-setup.md": {
      "metadata": {
        "name": "/env-setup",
        "description": "Configure environments for lusaka across Cloud Server",
        "usage": "/env-setup [environment-name] [--clone-from existing-env] [--variables key=value]",
        "category": "development",
        "allowed-tools": [
          "Write",
          "Read",
          "Edit",
          "Bash"
        ],
        "security": "input-validation-framework.md"
      },
      "file_size": 5045,
      "modified": 1753900430.827765
    },
    ".claude/commands/development/api-design.md": {
      "metadata": {
        "name": "/api-design",
        "description": "Design RESTful APIs for lusaka with [INSERT_software-development_STANDARDS]",
        "usage": "/api-design [endpoint-name] [http-method]",
        "category": "development",
        "allowed-tools": [
          "Write",
          "Edit",
          "Read"
        ]
      },
      "file_size": 1746,
      "modified": 1753900430.8259735
    },
    ".claude/commands/development/dev.md": {
      "metadata": {
        "name": "/dev",
        "description": "Unified intelligent development workflow with code formatting, linting, refactoring, debugging, feature development, project initialization, analysis, and dependency management",
        "usage": "[mode] [target] [options]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep",
          "Glob"
        ],
        "category": "development"
      },
      "file_size": 4162,
      "modified": 1753900430.8270514
    },
    ".claude/commands/development/dev-setup.md": {
      "metadata": {
        "name": "/dev-setup",
        "description": "Setup development environment for lusaka with Python",
        "usage": "/dev-setup [--environment local|docker|cloud] [--tools all|minimal|custom]",
        "category": "development",
        "allowed-tools": [
          "Bash",
          "Write",
          "Read",
          "Edit"
        ]
      },
      "file_size": 2471,
      "modified": 1753900430.8264408
    },
    ".claude/commands/development/protocol.md": {
      "metadata": {
        "name": "/protocol",
        "description": "Advanced protocol-driven development with safety frameworks, validation pipelines, and rigorous quality assurance",
        "usage": "[protocol_type] [safety_level]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep"
        ],
        "category": "development"
      },
      "file_size": 2862,
      "modified": 1753900430.8288538
    },
    ".claude/commands/meta/smart-adapt-project.md": {
      "metadata": {
        "name": "/smart-adapt-project",
        "description": "Intelligent project adaptation with 70%+ automated placeholder replacement",
        "usage": "[target_directory] [mode:quick|thorough]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Grep",
          "Glob",
          "Bash"
        ],
        "category": "meta"
      },
      "file_size": 4980,
      "modified": 1753900430.8415487
    },
    ".claude/commands/meta/sync-from-reference.md": {
      "metadata": {
        "name": "/sync-from-reference",
        "description": "Pull updates from framework while preserving your customizations",
        "usage": "/sync-from-reference [--preview] [--approve-all]",
        "category": "meta-commands",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Grep",
          "Bash"
        ]
      },
      "file_size": 4771,
      "modified": 1753900430.8430464
    },
    ".claude/commands/meta/adapt-to-project.md": {
      "metadata": {
        "name": "/adapt-to-project",
        "description": "Interactive automated project customization with real-time detection",
        "usage": "/adapt-to-project",
        "category": "meta-commands",
        "allowed-tools": [
          "Bash",
          "Read",
          "Write",
          "Edit",
          "MultiEdit",
          "Glob",
          "LS"
        ]
      },
      "file_size": 3539,
      "modified": 1753900430.8369708
    },
    ".claude/commands/meta/replace-placeholders.md": {
      "metadata": {
        "name": "/replace-placeholders",
        "description": "Systematically replace all placeholders in adapted commands",
        "usage": "/replace-placeholders [--dry-run] [--config-file project-config.yaml]",
        "category": "meta-commands",
        "allowed-tools": [
          "Read",
          "Write",
          "MultiEdit",
          "Grep"
        ]
      },
      "file_size": 5096,
      "modified": 1753900430.8399928
    },
    ".claude/commands/meta/import-pattern.md": {
      "metadata": {
        "name": "/import-pattern",
        "description": "Import community adaptation patterns for similar projects",
        "usage": "/import-pattern [pattern-name] [--preview] [--merge|--replace]",
        "category": "meta-commands",
        "allowed-tools": [
          "Read",
          "Write",
          "MultiEdit"
        ]
      },
      "file_size": 5133,
      "modified": 1753900430.8384352
    },
    ".claude/commands/meta/generate-command.md": {
      "metadata": {
        "name": "/generate-command",
        "description": "Meta-prompt system to automatically generate new Claude Code slash commands",
        "usage": "/generate-command <task-description> [--framework=<framework>]",
        "category": "meta-commands",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "MultiEdit",
          "Glob",
          "LS",
          "Bash"
        ]
      },
      "file_size": 5929,
      "modified": 1753900430.8376186
    },
    ".claude/commands/meta/welcome.md": {
      "metadata": {
        "name": "/welcome",
        "description": "Interactive onboarding guide for new Claude Code Adaptation Engine users",
        "usage": "/welcome [--quick|--detailed] [--role developer|lead|architect]",
        "category": "meta-commands",
        "allowed-tools": [
          "Read",
          "Write"
        ]
      },
      "file_size": 5671,
      "modified": 1753900430.8463027
    },
    ".claude/commands/meta/validate-adaptation.md": {
      "metadata": {
        "name": "/validate-adaptation",
        "description": "Check adaptation completeness and calculate readiness score",
        "usage": "/validate-adaptation [--verbose] [--auto-run]",
        "category": "meta-commands",
        "allowed-tools": [
          "Read",
          "Grep",
          "TodoWrite"
        ]
      },
      "file_size": 4252,
      "modified": 1753900430.8446002
    },
    ".claude/commands/meta/memory-manager.md": {
      "metadata": {
        "name": "/memory-manager",
        "description": "MCP-powered persistent memory and learning system for template automation",
        "usage": "/memory-manager <action> [--scope=personal|project|team] [--export-path=<path>]",
        "category": "meta-commands",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "MultiEdit",
          "Bash",
          "LS",
          "Glob"
        ]
      },
      "file_size": 8969,
      "modified": 1753900430.8392212
    },
    ".claude/commands/meta/undo-adaptation.md": {
      "metadata": {
        "name": "/undo-adaptation",
        "description": "Revert adaptations to previous state with full recovery capability",
        "usage": "/undo-adaptation [--last|--to-snapshot snapshot-id] [--preview]",
        "category": "meta-commands",
        "allowed-tools": [
          "Read",
          "Write",
          "MultiEdit",
          "Bash"
        ]
      },
      "file_size": 5656,
      "modified": 1753900430.8437848
    },
    ".claude/commands/meta/spawn-specialist.md": {
      "metadata": {
        "name": "/spawn-specialist",
        "description": "Create and launch specialized sub-agents for complex multi-domain tasks",
        "usage": "/spawn-specialist <domain> <task-description> [--parallel] [--coordinated]",
        "category": "meta-commands",
        "allowed-tools": [
          "Task",
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Glob",
          "Grep"
        ]
      },
      "file_size": 9937,
      "modified": 1753900430.8423374
    },
    ".claude/commands/meta/adapt-to-project-auto.md": {
      "metadata": {
        "name": "/adapt-to-project-auto",
        "description": "TRUE automated project adaptation using framework detection and meta-prompting",
        "usage": "/adapt-to-project-auto [--confirm] [--dry-run]",
        "category": "meta-commands",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "MultiEdit",
          "Bash",
          "Grep",
          "Glob",
          "LS"
        ]
      },
      "file_size": 6461,
      "modified": 1753900430.8363445
    },
    ".claude/commands/meta/share-adaptation.md": {
      "metadata": {
        "name": "/share-adaptation",
        "description": "Export your adaptation patterns to share with the community",
        "usage": "/share-adaptation [--name pattern-name] [--description text] [--anonymize]",
        "category": "meta-commands",
        "allowed-tools": [
          "Read",
          "Write",
          "TodoWrite"
        ]
      },
      "file_size": 4875,
      "modified": 1753900430.8407435
    },
    ".claude/commands/meta/validate-automation.md": {
      "metadata": {
        "name": "/validate-automation",
        "description": "Comprehensive validation and testing framework for template automation system",
        "usage": "/validate-automation [--scope=templates|scripts|integration|full] [--fix-issues]",
        "category": "meta-commands",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Glob",
          "Grep",
          "LS"
        ]
      },
      "file_size": 11237,
      "modified": 1753900430.845547
    },
    ".claude/commands/specialized/map-reduce.md": {
      "metadata": {
        "name": "/map-reduce",
        "description": "Distribute work across parallel agents then aggregate results using map-reduce pattern",
        "usage": "/map-reduce [large task to parallelize and aggregate]",
        "allowed-tools": [
          "Task",
          "TodoWrite",
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep",
          "Glob"
        ],
        "category": "specialized"
      },
      "file_size": 5902,
      "modified": 1753900430.860611
    },
    ".claude/commands/specialized/mass-transformation.md": {
      "metadata": {
        "name": "/mass-transformation",
        "description": "Ultimate transformation workflow that spawns 50+ agents for complete framework conversion",
        "usage": "[transformation_scope] [agent_limit] [parallel_mode]",
        "allowed-tools": [
          "Task",
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep",
          "Glob"
        ],
        "category": "specialized"
      },
      "file_size": 10944,
      "modified": 1753900430.8614736
    },
    ".claude/commands/specialized/secure-assess.md": {
      "metadata": {
        "name": "/secure-assess",
        "description": "Comprehensive code assessment with pattern analysis, risk analysis, compliance validation, and automated improvements",
        "usage": "[mode] [scope] [format]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep"
        ],
        "category": "specialized"
      },
      "file_size": 8656,
      "modified": 1753900430.8629246
    },
    ".claude/commands/specialized/swarm.md": {
      "metadata": {
        "name": "/swarm",
        "description": "Orchestrate a swarm of specialized agents working in parallel on complex tasks",
        "usage": "/swarm [task description and agent roles]",
        "allowed-tools": [
          "Task",
          "TodoWrite",
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep",
          "Glob"
        ],
        "category": "specialized"
      },
      "file_size": 3534,
      "modified": 1753900430.864194
    },
    ".claude/commands/specialized/dag-orchestrate.md": {
      "metadata": {
        "name": "/dag-orchestrate",
        "description": "Execute tasks using Directed Acyclic Graph orchestration with adaptive agent spawning",
        "usage": "/dag-orchestrate [task with dependencies and conditional paths]",
        "allowed-tools": [
          "Task",
          "TodoWrite",
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep",
          "Glob"
        ],
        "category": "specialized"
      },
      "file_size": 4725,
      "modified": 1753900430.8583436
    },
    ".claude/commands/specialized/secure-manage.md": {
      "metadata": {
        "name": "/secure-manage",
        "description": "Unified security management system with configuration, fixing, reporting, and hardening capabilities",
        "usage": "[mode] [scope] [format]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep"
        ],
        "category": "specialized"
      },
      "file_size": 10078,
      "modified": 1753900430.8635998
    },
    ".claude/commands/specialized/think-deep.md": {
      "metadata": {
        "name": "/think-deep",
        "description": "Advanced deep thinking and problem-solving with structured analysis, multi-perspective exploration, and comprehensive synthesis",
        "usage": "[problem_statement] [thinking_depth]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep"
        ],
        "category": "specialized"
      },
      "file_size": 4053,
      "modified": 1753900430.8647058
    },
    ".claude/commands/specialized/mega-platform-builder.md": {
      "metadata": {
        "name": "/mega-platform-builder",
        "description": "Ultimate platform builder that spawns 100+ agents for complete enterprise platform development",
        "usage": "[platform_type] [complexity_level] [agent_limit]",
        "allowed-tools": [
          "Task",
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep",
          "Glob"
        ],
        "category": "specialized"
      },
      "file_size": 14028,
      "modified": 1753900430.8621993
    },
    ".claude/commands/specialized/hierarchical.md": {
      "metadata": {
        "name": "/hierarchical",
        "description": "Orchestrate agents in a tree-like hierarchy with parent-child relationships and delegation",
        "usage": "/hierarchical [complex project requiring multi-level coordination]",
        "allowed-tools": [
          "Task",
          "TodoWrite",
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep",
          "Glob"
        ],
        "category": "specialized"
      },
      "file_size": 6907,
      "modified": 1753900430.859823
    },
    ".claude/commands/specialized/db-admin.md": {
      "metadata": {
        "name": "/db-admin",
        "description": "Unified database administration with migration, backup, and restoration capabilities",
        "usage": "[operation] [options]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep"
        ],
        "category": "specialized"
      },
      "file_size": 13793,
      "modified": 1753900430.8589814
    },
    ".claude/commands/specialized/dag-executor.md": {
      "metadata": {
        "name": "/dag-executor",
        "description": "DAG execution engine with dependency resolution, parallel processing, and error recovery",
        "usage": "[dag_definition] [execution_mode]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep"
        ],
        "category": "specialized"
      },
      "file_size": 11278,
      "modified": 1753900430.8575761
    },
    ".claude/commands/testing/test-unit.md": {
      "metadata": {
        "name": "/test-unit",
        "description": "Run unit tests for [INSERT_PROJECT_NAME] using [INSERT_TESTING_FRAMEWORK]",
        "usage": "/test-unit [file-pattern] [--coverage] [--watch]",
        "category": "testing",
        "allowed-tools": [
          "Bash",
          "Read",
          "Write"
        ]
      },
      "file_size": 3788,
      "modified": 1753900430.8679059
    },
    ".claude/commands/testing/dev-test.md": {
      "metadata": {
        "name": "/dev-test",
        "description": "Advanced development testing with comprehensive coverage, intelligent test generation, and automated quality validation",
        "usage": "[test_scope] [coverage_strategy]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep"
        ],
        "category": "testing"
      },
      "file_size": 3729,
      "modified": 1753900430.8653507
    },
    ".claude/commands/testing/test-e2e.md": {
      "metadata": {
        "name": "/test-e2e",
        "description": "Intelligent end-to-end (E2E) testing with automated test script generation, browser automation, and comprehensive reporting",
        "usage": "[url] [test_scenario]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep"
        ],
        "category": "testing"
      },
      "file_size": 4962,
      "modified": 1753900430.866598
    },
    ".claude/commands/testing/mutation.md": {
      "metadata": {
        "name": "/mutation",
        "description": "Performs mutation testing to assess the effectiveness of existing test suites",
        "usage": "[target_file] [auto_fix]",
        "allowed-tools": [
          "Read",
          "Write",
          "Bash",
          "Edit"
        ],
        "category": "testing"
      },
      "file_size": 4986,
      "modified": 1753900430.8659396
    },
    ".claude/commands/testing/test-integration.md": {
      "metadata": {
        "name": "/test-integration-project",
        "description": "Run integration tests for [INSERT_PROJECT_NAME] with [INSERT_API_STYLE] APIs and [INSERT_DATABASE_TYPE]",
        "usage": "/test-integration [test-suite] [--environment staging|production] [--parallel] [--verbose]",
        "category": "testing",
        "allowed-tools": [
          "Bash",
          "Read",
          "Write"
        ],
        "security": "input-validation-framework.md"
      },
      "file_size": 7323,
      "modified": 1753900430.8673537
    },
    ".claude/commands/web-dev/component-gen.md": {
      "metadata": {
        "name": "/component-gen",
        "description": "Generate [INSERT_TECH_STACK] components for [INSERT_PROJECT_NAME] following team conventions",
        "usage": "/component-gen [component-name] [--type functional|class|page] [--with-tests] [--with-styles]",
        "category": "web-dev",
        "allowed-tools": [
          "Write",
          "Read",
          "Edit"
        ]
      },
      "file_size": 3682,
      "modified": 1753900430.8683963
    },
    ".claude/commands/examples/component-demo-api-integration.md": {
      "metadata": {
        "name": "/demo-api-integration",
        "description": "Demonstrate API integration pattern with validation and transformation",
        "usage": "[api_endpoint] [output_format]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Grep",
          "WebFetch"
        ],
        "category": "examples"
      },
      "file_size": 1799,
      "modified": 1753900430.832536
    },
    ".claude/commands/examples/component-demo-input-processing.md": {
      "metadata": {
        "name": "/demo-input-processing",
        "description": "Demonstrate reliable input processing and parameter validation",
        "usage": "[input_data] [processing_options]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Grep"
        ],
        "category": "examples"
      },
      "file_size": 1388,
      "modified": 1753900430.8342564
    },
    ".claude/commands/examples/component-demo-development-workflow.md": {
      "metadata": {
        "name": "/demo-development-workflow",
        "description": "Demonstrate development workflow with git operations, testing, and progress tracking",
        "usage": "[branch_name] [test_suite]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Grep",
          "Bash",
          "Glob"
        ],
        "category": "examples"
      },
      "file_size": 2535,
      "modified": 1753900430.8330603
    },
    ".claude/commands/examples/component-demo-search-transform.md": {
      "metadata": {
        "name": "/demo-search-transform",
        "description": "Demonstrate highest-scoring pattern - Search and Transform",
        "usage": "[search_pattern] [target_format]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Grep",
          "Glob"
        ],
        "category": "examples"
      },
      "file_size": 1740,
      "modified": 1753900430.8347087
    },
    ".claude/commands/examples/component-demo-file-processor.md": {
      "metadata": {
        "name": "/demo-file-processor",
        "description": "Demonstrate atomic components in action - File Processing Pattern",
        "usage": "[file_pattern] [output_format]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Grep",
          "Glob"
        ],
        "category": "examples"
      },
      "file_size": 2018,
      "modified": 1753900430.8335204
    },
    ".claude/commands/examples/component-demo-workflow-orchestration.md": {
      "metadata": {
        "name": "/demo-workflow-orchestration",
        "description": "Demonstrate complex workflow management with atomic components",
        "usage": "[workflow_name] [parallel_tasks]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Grep",
          "Glob",
          "Bash"
        ],
        "category": "examples"
      },
      "file_size": 1812,
      "modified": 1753900430.8352222
    },
    ".claude/commands/monitoring/monitor-setup.md": {
      "metadata": {
        "name": "/monitor-setup",
        "description": "Setup monitoring for [INSERT_PROJECT_NAME] on [INSERT_DEPLOYMENT_TARGET]",
        "usage": "/monitor-setup [--stack prometheus|datadog|newrelic|cloudwatch] [--components all|app|infra|custom]",
        "category": "monitoring",
        "allowed-tools": [
          "Write",
          "Read",
          "Edit",
          "Bash"
        ],
        "security": "input-validation-framework.md"
      },
      "file_size": 5576,
      "modified": 1753900430.8478987
    },
    ".claude/commands/monitoring/monitor-alerts.md": {
      "metadata": {
        "name": "/monitor-alerts",
        "description": "Configure alerts for [INSERT_PROJECT_NAME] based on [INSERT_USER_BASE] SLAs",
        "usage": "/monitor-alerts [--severity critical|warning|info] [--channel email|slack|pagerduty] [--threshold value]",
        "category": "monitoring",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit"
        ],
        "security": "input-validation-framework.md"
      },
      "file_size": 6219,
      "modified": 1753900430.847115
    },
    ".claude/commands/development/project/global-deploy.md": {
      "metadata": {
        "name": "/global-deploy",
        "description": "Advanced global deployment with multi-region orchestration, geographic optimization, and intelligent traffic management",
        "usage": "[deployment_scope] [region_strategy]",
        "allowed-tools": [
          "Read",
          "Write",
          "Edit",
          "Bash",
          "Grep"
        ],
        "category": "development"
      },
      "file_size": 12548,
      "modified": 1753900430.8283627
    }
  },
  "last_updated": 1753909205.751584,
  "processing_time": 19.37887503299862,
  "files_processed": 82
}