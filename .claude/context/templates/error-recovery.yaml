# Error Recovery Decision Artifact Template
# Use this when handling errors and recovery actions

artifact:
  id: "${TIMESTAMP}-error-${HASH}"
  version: "1.0.0"
  type: "error"
  timestamp: "${ISO_TIMESTAMP}"
  session_id: "${SESSION_ID}"
  
  metadata:
    priority: "critical"  # Errors are always critical
    preserve_until: "${PRESERVE_DATE}"
    compression_safe: true
    cross_references: ["${PARENT_ARTIFACT_ID}"]
    tags: ["error", "recovery", "${ERROR_TYPE}"]
    
  context:
    user_request: "${ORIGINAL_REQUEST}"
    current_state:
      files_modified: ${MODIFIED_FILES}
      tests_status: "failing"
      active_issues: ${ACTIVE_ISSUES}
    environment:
      working_directory: "${PWD}"
      git_branch: "${GIT_BRANCH}"
      framework_version: "2.3.0"
      
  decision:
    type: "error_recovery"
    rationale: "${RECOVERY_RATIONALE}"
    error_analysis:
      error_type: "${ERROR_TYPE}"
      error_message: "${ERROR_MESSAGE}"
      stack_trace: "${STACK_TRACE}"
      root_cause: "${ROOT_CAUSE}"
      affected_components: ${AFFECTED_COMPONENTS}
    chosen_path: "${RECOVERY_APPROACH}"
    alternatives_considered:
      - path: "Rollback"
        reason_rejected: "${ROLLBACK_REJECTION}"
      - path: "Retry"
        reason_rejected: "${RETRY_REJECTION}"
      - path: "Manual intervention"
        reason_rejected: "${MANUAL_REJECTION}"
    confidence_level: ${CONFIDENCE}
    
  execution:
    command_used: "${RECOVERY_COMMAND}"
    modules_invoked: ["error-recovery", "${SPECIFIC_MODULE}"]
    start_time: "${START_TIME}"
    end_time: null
    status: "recovering"
    
  outcomes:
    files_created: []
    files_modified: []
    tests_added: 0
    tests_passing: 0
    issues_resolved: []
    errors_encountered: ["${ORIGINAL_ERROR}"]
    recovery_actions: ["${RECOVERY_ACTION}"]
    
  audit_trail:
    - timestamp: "${TIMESTAMP}"
      action: "Error detected"
      details: "${ERROR_SUMMARY}"
    - timestamp: "${TIMESTAMP}"
      action: "Recovery initiated"
      details: "${RECOVERY_SUMMARY}"