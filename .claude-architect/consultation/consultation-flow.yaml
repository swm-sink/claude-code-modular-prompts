# Claude Context Architect - Multi-Stage Consultation Flow
# Version: 1.0 - Interactive Discovery Architecture
# Created: 2025-08-07
# Purpose: 20-30 minute guided project discovery replacing speed assumptions

# =============================================================================
# CONSULTATION FLOW ARCHITECTURE
# =============================================================================
consultation_flow:
  version: "1.0"
  philosophy: "Depth through intelligent conversation, not interrogation"
  target_duration: "20-30 minutes"
  value_proposition: "Users WANT to spend time because they see immediate value"
  
  design_principles:
    conversation_not_interrogation: "Feel like talking to expert consultant"
    adaptive_intelligence: "Questions adapt based on responses"
    time_respect: "Every question has clear purpose and value"
    user_control: "Can skip, pause, or revisit at any time"
    building_understanding: "Each stage builds on previous knowledge"
    immediate_value: "User sees understanding grow in real-time"

# =============================================================================
# CONSULTATION STAGES
# =============================================================================
stages:
  # ---------------------------------------------------------------------------
  # STAGE 1: Project Discovery (5-7 minutes)
  # ---------------------------------------------------------------------------
  stage_1_project_discovery:
    name: "Project Discovery"
    duration: "5-7 minutes"
    objective: "Understand project essence and context"
    value_statement: "Let's understand what makes your project unique"
    
    goals:
      primary: "Identify project type, scale, and domain fundamentals"
      secondary: "Establish communication style and expertise level"
      tertiary: "Discover current pain points and aspirations"
    
    question_categories:
      project_essence:
        - "What type of project are we working with?"
        - "What's the primary goal or purpose?"
        - "Who are the main users or stakeholders?"
        
      scale_and_context:
        - "What's the current size/complexity?"
        - "How large is the development team?"
        - "What stage of development (new/established/legacy)?"
        
      pain_points_and_goals:
        - "What's the biggest challenge right now?"
        - "What would success look like in 6 months?"
        - "What brought you to need better Claude integration?"
    
    time_allocation:
      opening_context: "1 minute"
      core_questions: "3-4 minutes"
      confirmation_and_notes: "1-2 minutes"
    
    transition_criteria:
      must_have:
        - "Project type identified"
        - "Team size understood"
        - "Primary domain established"
      nice_to_have:
        - "Pain points documented"
        - "Success criteria noted"
        - "Expertise level gauged"
    
    adaptive_features:
      skip_conditions:
        - "Project type clearly detected in analysis"
        - "Standard patterns strongly match"
        - "User requests express mode"
      depth_adjustments:
        - "Beginner: More explanation, simpler terms"
        - "Expert: Technical depth, pattern discussion"
        - "Team lead: Focus on coordination, standards"
    
    user_control_points:
      - "Skip project type if already discussed"
      - "Quick mode: 3 essential questions only"
      - "Deep mode: Full exploration with examples"
      - "Pause point after project essence established"

  # ---------------------------------------------------------------------------
  # STAGE 2: Technical Deep Dive (7-10 minutes)
  # ---------------------------------------------------------------------------
  stage_2_technical_deep_dive:
    name: "Technical Deep Dive"
    duration: "7-10 minutes"
    objective: "Understand technical architecture and development patterns"
    value_statement: "Now let's dig into how your project actually works"
    
    goals:
      primary: "Map technical architecture and key patterns"
      secondary: "Identify testing, deployment, and development workflow"
      tertiary: "Understand performance needs and constraints"
    
    question_categories:
      architecture_patterns:
        - "How is your application structured? (MVC, microservices, monolith)"
        - "What are your key frameworks and technologies?"
        - "How do you handle data persistence and state?"
        
      development_workflow:
        - "What's your testing strategy and coverage?"
        - "How do you handle deployment and CI/CD?"
        - "What development tools and processes do you use?"
        
      performance_and_constraints:
        - "Are there specific performance requirements?"
        - "What are your biggest technical constraints?"
        - "How do you handle errors and monitoring?"
    
    time_allocation:
      stage_transition: "1 minute"
      architecture_discussion: "3-4 minutes"
      workflow_exploration: "2-3 minutes"
      constraints_and_performance: "2-3 minutes"
    
    transition_criteria:
      must_have:
        - "Primary tech stack identified"
        - "Architecture pattern understood"
        - "Testing approach documented"
      nice_to_have:
        - "Deployment pipeline mapped"
        - "Performance requirements noted"
        - "Technical debt acknowledged"
    
    adaptive_features:
      framework_specific:
        react: "Component patterns, state management, testing approach"
        node: "API structure, database patterns, async handling"
        python: "Framework choice, ORM usage, package structure"
        java: "Spring patterns, Maven/Gradle, enterprise constraints"
      
      depth_calibration:
        startup: "Focus on speed, flexibility, growth patterns"
        enterprise: "Emphasize standards, security, maintainability"
        open_source: "Community patterns, documentation, contribution"
    
    user_control_points:
      - "Skip sections for familiar stacks"
      - "Deep dive: Architecture discussion with examples"
      - "Quick mode: Essential patterns only"
      - "Technical pause: Review understanding so far"

  # ---------------------------------------------------------------------------
  # STAGE 3: Domain Extraction (7-10 minutes)
  # ---------------------------------------------------------------------------
  stage_3_domain_extraction:
    name: "Domain Extraction"
    duration: "7-10 minutes"
    objective: "Extract business logic, terminology, and domain expertise"
    value_statement: "Let's capture the business knowledge that makes your project special"
    
    goals:
      primary: "Identify key business concepts and terminology"
      secondary: "Map critical workflows and user journeys"
      tertiary: "Understand integration patterns and data relationships"
    
    question_categories:
      business_concepts:
        - "What are the core business entities in your system?"
        - "What domain-specific terminology should Claude understand?"
        - "What business rules are most critical?"
        
      user_workflows:
        - "What are the main user journeys through your system?"
        - "What are the most common user tasks or operations?"
        - "What workflows are most complex or error-prone?"
        
      integrations_and_data:
        - "What external systems do you integrate with?"
        - "What data relationships are most important?"
        - "How do you handle data validation and business logic?"
    
    time_allocation:
      stage_transition: "1 minute"
      business_concepts: "3-4 minutes"
      workflow_mapping: "2-3 minutes"
      integration_patterns: "2-3 minutes"
    
    transition_criteria:
      must_have:
        - "Core business entities identified"
        - "Domain terminology captured"
        - "Primary workflows mapped"
      nice_to_have:
        - "Business rules documented"
        - "Integration patterns noted"
        - "Data relationships understood"
    
    adaptive_features:
      domain_specific:
        ecommerce: "Products, orders, payments, inventory, customers"
        finance: "Transactions, accounts, compliance, reporting, risk"
        healthcare: "Patients, providers, HIPAA, workflows, records"
        education: "Students, courses, assessments, progress, resources"
        
      complexity_adjustment:
        b2b: "Focus on business processes, integrations, reporting"
        b2c: "Emphasize user experience, scalability, analytics"
        internal: "Highlight efficiency, compliance, maintenance"
    
    user_control_points:
      - "Skip if domain is very technical (infrastructure, etc.)"
      - "Deep mode: Detailed business rule discussion"
      - "Quick mode: Core entities and terminology only"
      - "Business pause: Confirm domain understanding"

  # ---------------------------------------------------------------------------
  # STAGE 4: Preference Learning (3-5 minutes)
  # ---------------------------------------------------------------------------
  stage_4_preference_learning:
    name: "Preference Learning"
    duration: "3-5 minutes"
    objective: "Learn team conventions, coding style, and preferences"
    value_statement: "Finally, let's make sure Claude fits your team's way of working"
    
    goals:
      primary: "Capture coding standards and style preferences"
      secondary: "Understand documentation and communication style"
      tertiary: "Learn tool preferences and workflow habits"
    
    question_categories:
      coding_standards:
        - "Do you have specific coding style guidelines?"
        - "How do you prefer to structure and organize code?"
        - "What naming conventions do you follow?"
        
      documentation_style:
        - "How detailed should code comments be?"
        - "What documentation style do you prefer?"
        - "How do you like explanations presented?"
        
      tool_and_workflow:
        - "What development tools and IDEs do you use?"
        - "How do you prefer to receive suggestions and feedback?"
        - "Any specific preferences for command structure?"
    
    time_allocation:
      stage_transition: "30 seconds"
      coding_standards: "1-2 minutes"
      documentation_preferences: "1-2 minutes"
      tool_and_workflow: "1-2 minutes"
    
    transition_criteria:
      must_have:
        - "Core style preferences captured"
        - "Documentation level established"
        - "Communication style understood"
      nice_to_have:
        - "Tool integrations noted"
        - "Team conventions documented"
        - "Workflow preferences captured"
    
    adaptive_features:
      team_size_specific:
        solo: "Focus on personal productivity, learning preferences"
        small_team: "Emphasize consistency, simple coordination"
        large_team: "Highlight standards, review processes, documentation"
        
      experience_level:
        junior_focused: "More explanations, learning-oriented responses"
        senior_focused: "Concise, technical, efficiency-oriented"
        mixed_team: "Balanced approach with optional detail levels"
    
    user_control_points:
      - "Skip if using standard conventions"
      - "Quick mode: Essential preferences only"
      - "Deep mode: Detailed convention discussion"
      - "Final review: Confirm complete understanding"

# =============================================================================
# FLOW CONTROL SYSTEM
# =============================================================================
flow_control:
  navigation:
    linear_progression: "Default: Stage 1 → 2 → 3 → 4"
    skip_capabilities:
      - "Skip to specific stage if prior knowledge exists"
      - "Skip entire stages if not applicable"
      - "Quick mode: Essential questions only per stage"
    
    revision_support:
      - "Go back to modify answers"
      - "Review and confirm understanding"
      - "Add details to previous stages"
    
  time_management:
    target_total: "20-30 minutes"
    stage_flexibility: "±2 minutes per stage based on complexity"
    overtime_handling:
      soft_limit: "Gentle reminders at 25 minutes"
      hard_limit: "Graceful conclusion options at 35 minutes"
      quick_mode: "Switch to essential questions only"
    
  session_management:
    pause_points:
      - "After each stage completion"
      - "User-initiated pause at any time"
      - "Automatic checkpoint every 10 minutes"
    
    resume_capability:
      - "Full context restoration"
      - "Progress summary on resume"
      - "Option to review or continue"
    
  quality_control:
    understanding_validation:
      - "Confirm key insights at stage transitions"
      - "Ask clarifying questions when answers unclear"
      - "Summarize understanding for user confirmation"
    
    adaptive_questioning:
      - "Follow-up based on answer complexity"
      - "Adjust depth based on user engagement"
      - "Skip redundant questions based on inference"

# =============================================================================
# CONTEXT ACCUMULATION SYSTEM
# =============================================================================
context_accumulation:
  progressive_building:
    stage_1_foundation:
      - "Project type, domain, team size"
      - "Expertise level and communication style"
      - "Primary goals and challenges"
    
    stage_2_technical:
      - "Architecture patterns and tech stack"
      - "Development workflows and tools"
      - "Performance needs and constraints"
    
    stage_3_domain:
      - "Business entities and terminology"
      - "Critical workflows and user journeys"
      - "Integration patterns and data flows"
    
    stage_4_preferences:
      - "Coding standards and style guides"
      - "Documentation and communication preferences"
      - "Tool preferences and workflow habits"
  
  synthesis_points:
    after_stage_1: "Establish project persona and communication approach"
    after_stage_2: "Technical architecture understanding complete"
    after_stage_3: "Domain expertise and business context captured"
    after_stage_4: "Complete project DNA profile established"
  
  handoff_preparation:
    to_context_engine: "All extracted information organized for context generation"
    to_agent_factory: "Specialization requirements identified"
    to_command_forge: "Command generation parameters established"

# =============================================================================
# SUCCESS METRICS
# =============================================================================
success_metrics:
  time_efficiency:
    target_duration: "20-30 minutes"
    stage_balance: "No stage exceeds 35% of total time"
    user_control_usage: ">80% users find flow control helpful"
  
  information_quality:
    completeness: ">90% of required information captured"
    accuracy: ">95% of extracted information validated as correct"
    relevance: ">85% of information used in subsequent generation"
  
  user_experience:
    engagement: ">4.0/5.0 rating for conversation quality"
    value_perception: ">4.5/5.0 rating for time value"
    control_satisfaction: ">4.0/5.0 rating for user control"
  
  technical_effectiveness:
    context_quality: "Generated context improves Claude responses >50%"
    command_relevance: ">80% generated commands rated useful"
    agent_accuracy: ">85% agent specializations appropriate"