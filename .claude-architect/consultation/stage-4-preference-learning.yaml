# Stage 4: Preference Learning (3-5 minutes)
# Team conventions, coding style, documentation, and communication preferences
# Purpose: Ensure Claude matches your team's style and working patterns

# =============================================================================
# STAGE OVERVIEW
# =============================================================================
stage_info:
  name: "Preference Learning"
  duration: "3-5 minutes"
  sequence: 4
  objective: "Capture team conventions, style preferences, and communication patterns"
  value_statement: "Finally, let's make sure Claude fits your team's way of working"
  
  personality: "Attentive team coordinator learning working preferences"
  tone: "Collaborative, accommodating, detail-oriented about team dynamics"
  approach: "Quick but thorough capture of working style preferences"

# =============================================================================
# STAGE TRANSITION & CONTEXT BRIDGING (30 seconds)
# =============================================================================
transition:
  context_bridge: |
    "Perfect! Now I understand your project ([PROJECT_TYPE]), technical setup 
    ([TECH_STACK]), and business domain ([DOMAIN_SUMMARY]). The final piece 
    is making sure Claude works the way your team works."
  
  stage_preview: |
    "This is quick - just 3-5 minutes to understand:
    1. Your coding standards and style (1-2 minutes)
    2. Documentation and communication preferences (1-2 minutes)  
    3. Tool preferences and workflow habits (1-2 minutes)
    
    This ensures Claude's responses match your team's expectations. Ready?"

# =============================================================================
# PREFERENCE EXPLORATION (4-5 minutes)
# =============================================================================
question_flows:
  # ---------------------------------------------------------------------------
  # Flow A: Coding Standards and Style (1-2 minutes)
  # ---------------------------------------------------------------------------
  coding_standards:
    style_guide_existence: |
      "Do you follow specific coding standards or style guidelines? Company 
      standards, open source style guides, or your own conventions?"
    
    framework_specific_conventions:
      react_conventions:
        - "Function components vs. class components preference?"
        - "Hooks patterns and custom hooks approach?"
        - "Props destructuring and component organization style?"
      
      node_conventions:
        - "ES6+ features usage level - destructuring, async/await, arrow functions?"
        - "Module organization - CommonJS vs. ES modules?"
        - "Error handling patterns - try/catch, error-first callbacks, or async/await?"
      
      python_conventions:
        - "PEP 8 compliance level and any specific deviations?"
        - "Type hints usage - gradual typing, full typing, or minimal?"
        - "Function/class organization and docstring style?"
      
      java_conventions:
        - "Naming conventions for classes, methods, and variables?"
        - "Package organization and structure preferences?"
        - "Annotation usage and coding style preferences?"
    
    naming_and_organization: |
      "Any particular preferences for naming conventions, file organization, 
      or code structure? Things that make code feel 'right' for your team?"
    
    code_quality_priorities: |
      "What matters most to your team - readability, performance, maintainability, 
      or consistency? Any non-negotiables in code style?"

  # ---------------------------------------------------------------------------
  # Flow B: Documentation and Communication (1-2 minutes)
  # ---------------------------------------------------------------------------
  documentation_preferences:
    comment_style: |
      "How detailed should code comments be? Minimal comments for clean code, 
      comprehensive documentation, or somewhere in between?"
    
    explanation_style: |
      "When Claude explains code or suggests solutions, how much detail do you want? 
      Brief explanations, step-by-step walkthroughs, or contextual detail based 
      on complexity?"
    
    documentation_formats:
      technical_docs: "README files, inline docs, or separate documentation?"
      code_examples: "Prefer complete examples, code snippets, or conceptual explanations?"
      error_explanations: "Just the fix, or include explanation of why it happened?"
    
    communication_tone: |
      "What communication style works best for your team? More formal and 
      structured, conversational and friendly, or technical and precise?"

  # ---------------------------------------------------------------------------
  # Flow C: Tool and Workflow Preferences (1-2 minutes)  
  # ---------------------------------------------------------------------------
  tool_workflow_preferences:
    development_tools: |
      "What development tools are essential to your workflow? IDE preferences, 
      debugging tools, or any tools Claude should be aware of?"
    
    command_structure_preferences: |
      "For Claude commands, do you prefer:
      - Short, quick commands for speed
      - Descriptive, self-documenting commands
      - Flexible commands with many options
      - Simple commands that do one thing well?"
    
    feedback_and_suggestions: |
      "How do you prefer to receive suggestions from Claude?
      - Direct answers with minimal explanation
      - Options with pros/cons for decision-making  
      - Step-by-step guidance for learning
      - Context and reasoning behind suggestions?"
    
    integration_preferences: |
      "Any preferences for how Claude integrates with your existing workflow? 
      Should it complement your current tools or suggest alternatives?"

# =============================================================================
# ADAPTIVE PREFERENCE INTELLIGENCE
# =============================================================================
team_context_adaptation:
  # ---------------------------------------------------------------------------
  # Team Size Specific Preferences
  # ---------------------------------------------------------------------------
  solo_developer:
    likely_preferences:
      - "Learning-oriented explanations"
      - "Flexible, exploratory approaches"
      - "Personal productivity focus"
      - "Less formal documentation"
    
    preference_questions:
      - "Do you prefer learning explanations or just solutions?"
      - "More interested in best practices or getting things done quickly?"
      - "Prefer detailed exploration or focused answers?"
  
  small_team_2_5:
    likely_preferences:
      - "Consistency and coordination"
      - "Simple, shared conventions"
      - "Efficient communication"
      - "Collaborative decision-making"
    
    preference_questions:
      - "How do you maintain consistency across team members?"
      - "Do you prefer established conventions or flexible approaches?"
      - "How formal should code reviews and documentation be?"
  
  larger_team_6plus:
    likely_preferences:
      - "Standardization and governance"
      - "Comprehensive documentation"
      - "Process and procedure focus"
      - "Enterprise-grade approaches"
    
    preference_questions:
      - "What standards and processes are most important to maintain?"
      - "How do you handle architectural decisions and documentation?"
      - "What level of formality and process do you need?"

  # ---------------------------------------------------------------------------
  # Project Stage Specific Preferences
  # ---------------------------------------------------------------------------
  early_stage:
    likely_preferences:
      - "Speed and flexibility over perfection"
      - "Learning and experimentation"
      - "Minimal but sufficient documentation"
      - "Pragmatic over purist approaches"
    
    preference_adjustments:
      - "Emphasize rapid iteration and learning"
      - "Suggest flexible, adaptable patterns"
      - "Focus on getting to working solutions quickly"
  
  mature_project:
    likely_preferences:
      - "Stability and maintainability"
      - "Comprehensive documentation"
      - "Established patterns and conventions"
      - "Risk-averse, proven approaches"
    
    preference_adjustments:
      - "Emphasize stability and backward compatibility"
      - "Suggest well-established, proven patterns"
      - "Focus on maintainability and documentation"

  # ---------------------------------------------------------------------------
  # Industry/Domain Specific Preferences
  # ---------------------------------------------------------------------------
  enterprise_fintech:
    typical_preferences:
      - "Formal documentation and compliance"
      - "Rigorous testing and validation"
      - "Conservative, proven approaches"
      - "Comprehensive error handling"
    
  startup_consumer:
    typical_preferences:
      - "Rapid iteration and experimentation"
      - "User experience focus"
      - "Flexible, adaptable approaches"
      - "Metrics and growth oriented"
    
  open_source:
    typical_preferences:
      - "Community standards and conventions"
      - "Comprehensive documentation for contributors"
      - "Inclusive and accessible communication"
      - "Maintainability and contributor onboarding"

# =============================================================================
# PREFERENCE VALIDATION & SYNTHESIS
# =============================================================================
preference_synthesis:
  style_summary: |
    "Let me confirm your team's working style:
    
    **Coding Standards**: [STANDARDS_SUMMARY]
    **Code Organization**: [ORGANIZATION_PREFERENCES]
    **Documentation Level**: [DOCUMENTATION_STYLE]
    **Communication Style**: [COMMUNICATION_PREFERENCES]
    **Command Preferences**: [COMMAND_STYLE]
    **Tool Integration**: [TOOL_PREFERENCES]
    
    Does this capture how your team likes to work?"
  
  priority_validation: |
    "What's most important to get right? What would make Claude most helpful 
    for your day-to-day work?"
  
  adjustment_opportunity: |
    "Any specific preferences or pet peeves I should make sure Claude respects?"

# =============================================================================
# COMPLETE CONSULTATION SYNTHESIS
# =============================================================================
full_consultation_synthesis:
  comprehensive_understanding: |
    "Excellent! Let me summarize what I've learned about your project:
    
    **PROJECT FOUNDATION**
    - **Type**: [PROJECT_TYPE] 
    - **Domain**: [DOMAIN_AREA]
    - **Team**: [TEAM_SIZE] at [PROJECT_STAGE] stage
    - **Goals**: [PRIMARY_GOALS]
    
    **TECHNICAL ARCHITECTURE**
    - **Stack**: [TECH_STACK]
    - **Architecture**: [ARCHITECTURE_PATTERN]
    - **Development**: [WORKFLOW_SUMMARY]
    - **Constraints**: [KEY_CONSTRAINTS]
    
    **BUSINESS DOMAIN**
    - **Entities**: [CORE_ENTITIES]
    - **Workflows**: [KEY_WORKFLOWS]
    - **Terminology**: [DOMAIN_TERMS]
    - **Integrations**: [EXTERNAL_SYSTEMS]
    
    **TEAM PREFERENCES**
    - **Style**: [CODING_STANDARDS]
    - **Communication**: [COMMUNICATION_STYLE]
    - **Documentation**: [DOCUMENTATION_LEVEL]
    - **Tools**: [TOOL_PREFERENCES]"
  
  readiness_confirmation: |
    "This gives me everything I need to create a comprehensive Claude setup 
    specifically tailored to your project. I'll generate:
    
    - Multi-file context system that makes Claude your project expert
    - Specialized agents for your specific domain and technical needs  
    - Custom commands that match your workflows and preferences
    - Documentation that fits your team's style and standards
    
    Ready to generate your personalized Claude Context architecture?"

# =============================================================================
# CONSULTATION COMPLETION & HANDOFF
# =============================================================================
completion_requirements:
  essential_preferences_captured:
    - "Coding style and standards level"
    - "Documentation depth and format preferences"
    - "Communication style and tone preferences"
    - "Command structure and interaction preferences"
  
  nice_to_have_preferences:
    - "Specific tool integrations and workflows"
    - "Team-specific conventions and patterns"
    - "Non-negotiables and strong preferences"
    - "Learning vs. efficiency priorities"

context_generation_handoff:
  complete_project_profile:
    foundation:
      - "Project type, domain, team size, stage, goals"
    technical:
      - "Architecture, tech stack, development workflow, constraints"  
    domain:
      - "Business entities, terminology, workflows, integrations"
    preferences:
      - "Coding style, communication preferences, tool integration"
  
  generation_parameters:
    context_depth: "Based on project complexity and team size"
    technical_focus: "Aligned with tech stack and architecture patterns"
    domain_specialization: "Customized to business entities and workflows"
    communication_style: "Matching team preferences and formality level"
    command_types: "Optimized for team size and development workflow"
    agent_specialization: "Tailored to domain complexity and technical needs"

# =============================================================================
# CONSULTATION SUCCESS METRICS
# =============================================================================
consultation_completion_metrics:
  information_completeness:
    - "100% of essential information captured across all 4 stages"
    - "80%+ of nice-to-have information documented"
    - "Clear understanding validated at each stage transition"
  
  time_effectiveness:
    - "Total consultation time: 20-30 minutes"
    - "Stage 4 completion: 3-5 minutes"
    - "User engagement maintained throughout"
  
  user_satisfaction:
    - "User feels understood and heard"
    - "Clear value in time investment"
    - "Confident in upcoming generation quality"
    - "Comfortable with consultation process"
  
  generation_readiness:
    - "Complete project profile established"
    - "All generation parameters defined"  
    - "Context depth and focus areas clear"
    - "Agent specialization requirements identified"
    - "Command types and preferences documented"