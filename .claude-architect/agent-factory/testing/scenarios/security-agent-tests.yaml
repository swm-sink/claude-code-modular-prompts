# Security Agent Test Scenarios
# Agent: Security Specialist
# Success Rate Requirement: >90% detection accuracy
# Focus: Security vulnerability detection and remediation recommendations

test_scenarios:
  basic_functionality:
    scenario_1_common_vulnerabilities:
      description: "Detect OWASP Top 10 vulnerabilities in web application"
      input:
        application_type: "web_application"
        code_samples:
          - "sql_injection_vulnerable_code"
          - "xss_vulnerable_template"
          - "insecure_authentication"
          - "broken_access_control"
        framework: "express_js"
      
      expected_outputs:
        - "All OWASP Top 10 vulnerabilities identified"
        - "Severity ratings provided"
        - "Specific remediation steps"
        - "Code examples for fixes"
      
      success_criteria:
        - "100% detection of known vulnerabilities"
        - "Accurate severity assessment"
        - "Actionable remediation guidance"
        - "Zero false positives"
      
      time_limit: 20
      
    scenario_2_dependency_analysis:
      description: "Analyze dependencies for known security vulnerabilities"
      input:
        package_files: ["package.json", "requirements.txt", "pom.xml"]
        vulnerability_databases: ["CVE", "npm_audit", "snyk"]
        project_type: "full_stack_application"
      
      expected_outputs:
        - "Complete dependency vulnerability report"
        - "Risk prioritization matrix"
        - "Update recommendations with version specifics"
        - "Alternative package suggestions"
      
      success_criteria:
        - "All vulnerable dependencies identified"
        - "Risk levels accurately assessed"
        - "Update paths clearly defined"
        - "Compatibility considerations addressed"
      
      time_limit: 15

  advanced_threat_detection:
    scenario_3_advanced_persistent_threats:
      description: "Identify sophisticated attack patterns and backdoors"
      input:
        code_base: "enterprise_application"
        analysis_scope: ["source_code", "configuration", "deployment"]
        threat_intelligence: "latest_apt_patterns"
      
      expected_outputs:
        - "Suspicious code patterns identified"
        - "Configuration vulnerabilities found"
        - "Deployment security gaps highlighted"
        - "Threat actor attribution insights"
      
      success_criteria:
        - "Advanced threats detected accurately"
        - "Low false positive rate < 5%"
        - "Threat intelligence integration effective"
        - "Actionable intelligence provided"
      
      time_limit: 35
      
    scenario_4_cryptographic_analysis:
      description: "Analyze cryptographic implementation for weaknesses"
      input:
        crypto_implementations: ["custom_encryption", "key_management", "certificate_handling"]
        compliance_requirements: ["FIPS_140", "GDPR", "HIPAA"]
        algorithm_usage: ["RSA", "AES", "SHA"]
      
      expected_outputs:
        - "Cryptographic strength assessment"
        - "Key management evaluation"
        - "Compliance gap analysis"
        - "Algorithm upgrade recommendations"
      
      success_criteria:
        - "All crypto weaknesses identified"
        - "Compliance gaps accurately assessed"
        - "Recommendations technically sound"
        - "Implementation guidance provided"
      
      time_limit: 30

  edge_cases:
    scenario_5_zero_day_detection:
      description: "Identify potential zero-day vulnerabilities through pattern analysis"
      input:
        analysis_target: "novel_application_patterns"
        behavioral_analysis: "runtime_monitoring_data"
        static_analysis: "deep_code_inspection"
      
      expected_approach:
        - "Pattern-based anomaly detection"
        - "Behavioral analysis integration"
        - "Static analysis correlation"
        - "Risk scoring methodology"
      
      success_criteria:
        - "Novel patterns identified correctly"
        - "False positive rate minimized"
        - "Risk assessment accurate"
        - "Mitigation strategies provided"
      
      time_limit: 45
      
    scenario_6_supply_chain_security:
      description: "Analyze entire software supply chain for security risks"
      input:
        supply_chain_components: ["dependencies", "build_tools", "deployment_infrastructure"]
        risk_factors: ["maintainer_trust", "update_frequency", "security_history"]
        compliance_frameworks: ["NIST_SSDF", "SLSA"]
      
      expected_outputs:
        - "Complete supply chain risk map"
        - "Trust level assessment"
        - "Compliance framework alignment"
        - "Risk mitigation roadmap"
      
      success_criteria:
        - "All supply chain risks identified"
        - "Trust assessments accurate"
        - "Compliance gaps found"
        - "Actionable mitigation plan"
      
      time_limit: 40

  performance_under_pressure:
    scenario_7_large_codebase_analysis:
      description: "Perform security analysis on million+ line codebase"
      input:
        codebase_size: "1M+ lines"
        languages: ["Java", "JavaScript", "Python", "C++"]
        time_constraint: "4 hours"
        accuracy_requirement: "> 90%"
      
      expected_performance:
        - "Efficient scanning algorithms"
        - "Prioritized vulnerability reporting"
        - "Resource usage optimization"
        - "Incremental analysis capability"
      
      success_criteria:
        - "Analysis completed within time limit"
        - "High-risk vulnerabilities identified first"
        - "Resource usage acceptable"
        - "Accuracy maintained"
      
      time_limit: 30
      
    scenario_8_real_time_monitoring:
      description: "Provide real-time security monitoring for live application"
      input:
        monitoring_scope: "production_application"
        traffic_volume: "high"
        response_time_requirement: "< 100ms"
        detection_accuracy: "> 95%"
      
      expected_capabilities:
        - "Real-time threat detection"
        - "Automated response triggering"
        - "False positive minimization"
        - "Performance impact minimal"
      
      success_criteria:
        - "Response time requirements met"
        - "Detection accuracy achieved"
        - "False positive rate < 2%"
        - "System performance unaffected"
      
      time_limit: 25

  integration_scenarios:
    scenario_9_multi_agent_coordination:
      description: "Coordinate with other agents for comprehensive security"
      input:
        collaboration_agents: ["architecture_agent", "code_generation_agent", "deployment_agent"]
        security_requirements: ["defense_in_depth", "zero_trust", "least_privilege"]
      
      expected_coordination:
        - "Security requirements shared clearly"
        - "Agent responsibilities defined"
        - "Security controls integrated"
        - "Compliance verification coordinated"
      
      success_criteria:
        - "No security gaps between agents"
        - "Comprehensive security coverage"
        - "Efficient agent communication"
        - "Consistent security policies"
      
      time_limit: 20

  compliance_testing:
    scenario_10_regulatory_compliance:
      description: "Ensure application meets regulatory security requirements"
      input:
        regulations: ["GDPR", "HIPAA", "PCI_DSS", "SOX"]
        application_type: "healthcare_financial"
        audit_requirements: "comprehensive"
      
      expected_outputs:
        - "Compliance gap analysis"
        - "Regulatory requirement mapping"
        - "Audit trail recommendations"
        - "Documentation templates"
      
      success_criteria:
        - "All regulatory requirements covered"
        - "Gap analysis comprehensive"
        - "Audit readiness achieved"
        - "Documentation complete"
      
      time_limit: 35

performance_metrics:
  response_time_target: "< 20 seconds"
  detection_accuracy_minimum: "90%"
  false_positive_rate_maximum: "5%"
  
  detailed_metrics:
    vulnerability_detection_rate: "> 90%"
    severity_assessment_accuracy: "> 95%"
    remediation_guidance_quality: "> 85%"
    compliance_gap_detection: "> 90%"
    threat_intelligence_integration: "> 80%"

validation_criteria:
  detection_accuracy:
    weight: 40
    measures:
      - "Known vulnerabilities found"
      - "False positive rate low"
      - "Severity ratings accurate"
  
  remediation_quality:
    weight: 25
    measures:
      - "Fix recommendations actionable"
      - "Code examples provided"
      - "Implementation guidance clear"
  
  compliance_coverage:
    weight: 20
    measures:
      - "Regulatory requirements met"
      - "Industry standards followed"
      - "Audit requirements satisfied"
  
  performance_efficiency:
    weight: 15
    measures:
      - "Analysis speed appropriate"
      - "Resource usage reasonable"
      - "Scalability demonstrated"

threat_intelligence_integration:
  data_sources:
    - "CVE database"
    - "NIST vulnerability database"
    - "Vendor security advisories"
    - "Threat intelligence feeds"
    - "Security research publications"
  
  update_frequency: "real_time"
  correlation_accuracy: "> 85%"
  false_positive_filtering: "> 90%"

automated_validation:
  vulnerability_database_sync: "Verify latest threat data"
  detection_algorithm_testing: "Run against known vulnerable code"
  compliance_framework_alignment: "Check regulatory requirement coverage"
  performance_benchmarking: "Measure analysis speed and accuracy"