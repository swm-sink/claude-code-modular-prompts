# Research Database Schema for Deep Discovery Pattern Analysis
# Version: 1.0
# Purpose: Structure for storing and validating evidence-based patterns from repository analysis

database_schema:
  # Pattern Categories with Evidence Requirements
  pattern_categories:
    commands:
      description: "Slash command patterns and implementations"
      subcategories:
        - generation_commands  # Commands that generate code/files
        - analysis_commands    # Commands that analyze existing code
        - workflow_commands    # Commands that orchestrate workflows
        - utility_commands     # Helper and utility commands
      evidence_requirements:
        minimum_examples: 3
        implementation_variety: required
        effectiveness_metrics: required
        
    agents:
      description: "Agent patterns and orchestration approaches"
      subcategories:
        - specialized_agents   # Domain-specific agents
        - orchestration_agents # Coordination and management
        - validation_agents    # Quality and testing agents
        - research_agents      # Analysis and discovery agents
      evidence_requirements:
        minimum_examples: 2
        capability_definition: required
        interaction_patterns: required
        
    context:
      description: "Context engineering and CLAUDE.md patterns"
      subcategories:
        - project_memory      # CLAUDE.md structure patterns
        - hierarchical_context # Multi-file context systems
        - navigation_patterns  # Cross-reference approaches
        - token_optimization   # Efficiency strategies
      evidence_requirements:
        minimum_examples: 3
        effectiveness_validation: required
        token_analysis: recommended
        
    workflows:
      description: "End-to-end workflow patterns"
      subcategories:
        - development_workflows # Code development processes
        - testing_workflows     # Test-driven approaches
        - deployment_workflows  # CI/CD and release patterns
        - team_workflows        # Collaboration patterns
      evidence_requirements:
        minimum_examples: 2
        time_metrics: required
        success_criteria: required

  # Pattern Record Structure
  pattern_record:
    id: "pattern-{category}-{timestamp}"
    category: "string"  # From pattern_categories
    subcategory: "string"
    name: "string"
    description: "string"
    
    evidence:
      sources:
        - repository: "string"
          url: "string"
          file_path: "string"
          line_numbers: "array"
          extracted_date: "datetime"
          
      validation:
        craap_scores:
          currency: "float"    # 0-1 score for recency
          relevance: "float"   # 0-1 score for applicability
          authority: "float"   # 0-1 score for source credibility
          accuracy: "float"    # 0-1 score for correctness
          purpose: "float"     # 0-1 score for intent alignment
        total_score: "float"   # Weighted average
        
      cross_references:
        - pattern_id: "string"
          relationship: "string"  # extends, conflicts, complements
          strength: "float"       # 0-1 correlation strength
          
    implementation:
      code_snippet: "text"
      language: "string"
      dependencies: "array"
      complexity: "string"  # simple, moderate, complex
      
    effectiveness:
      metrics:
        adoption_rate: "float"     # % of repos using pattern
        success_rate: "float"      # % reporting positive outcomes
        time_savings: "string"     # Estimated efficiency gain
        quality_improvement: "string" # Measured quality impact
        
      user_feedback:
        positive_mentions: "integer"
        negative_mentions: "integer"
        neutral_mentions: "integer"
        sentiment_score: "float"   # -1 to 1
        
    applicability:
      domains: "array"          # web, data-science, devops, etc.
      team_sizes: "array"       # solo, small, medium, large
      project_complexity: "array" # simple, moderate, complex
      prerequisites: "array"     # Required knowledge/tools
      
    confidence:
      evidence_strength: "float"  # 0-1 based on source count
      validation_confidence: "float" # 0-1 based on CRAAP
      implementation_confidence: "float" # 0-1 based on testing
      overall_confidence: "float" # Weighted average
      
    metadata:
      created_date: "datetime"
      last_updated: "datetime"
      analysis_version: "string"
      analyst_notes: "text"

  # Confidence Scoring System
  confidence_scoring:
    evidence_strength:
      weights:
        source_count: 0.4      # More sources = higher confidence
        source_diversity: 0.3  # Different repos = higher confidence
        source_authority: 0.3  # Popular/maintained = higher confidence
      thresholds:
        high: 0.8
        medium: 0.6
        low: 0.4
        
    validation_confidence:
      weights:
        currency: 0.2
        relevance: 0.3
        authority: 0.2
        accuracy: 0.2
        purpose: 0.1
      thresholds:
        high: 0.8
        medium: 0.6
        low: 0.4
        
    implementation_confidence:
      weights:
        working_examples: 0.4
        documentation_quality: 0.3
        community_validation: 0.3
      thresholds:
        high: 0.8
        medium: 0.6
        low: 0.4

  # Cross-Reference Capabilities
  cross_reference_system:
    relationship_types:
      - extends        # Pattern builds upon another
      - conflicts      # Patterns are mutually exclusive
      - complements    # Patterns work well together
      - requires       # Pattern depends on another
      - replaces       # Pattern supersedes another
      - variants       # Different implementations of same concept
      
    correlation_tracking:
      co_occurrence: "float"    # How often patterns appear together
      sequential_usage: "float" # How often one follows another
      domain_correlation: "float" # Domain-specific relationships
      
  # Quality Criteria
  quality_gates:
    minimum_requirements:
      evidence_sources: 3        # At least 3 different sources
      confidence_score: 0.6      # Minimum 60% confidence
      validation_complete: true  # CRAAP test performed
      
    preferred_requirements:
      evidence_sources: 5
      confidence_score: 0.8
      cross_references: 2
      user_validation: true
      
  # Database Operations
  operations:
    insert_pattern:
      validation_required: true
      duplicate_check: true
      confidence_calculation: automatic
      
    update_pattern:
      version_tracking: true
      evidence_append: true
      confidence_recalculation: automatic
      
    query_patterns:
      filters:
        - by_category
        - by_confidence
        - by_domain
        - by_effectiveness
        - by_date_range
      sorting:
        - by_confidence
        - by_adoption_rate
        - by_recency
        - by_effectiveness
      aggregation:
        - patterns_per_category
        - average_confidence
        - domain_distribution
        - trend_analysis

# Usage Examples
usage_examples:
  insert_new_pattern: |
    pattern:
      category: commands
      subcategory: generation_commands
      name: component-generator
      evidence:
        sources: [3+ repositories]
        validation: CRAAP scores calculated
      confidence: auto-calculated
      
  query_high_confidence: |
    query:
      filter: confidence > 0.8
      category: agents
      sort: by_adoption_rate
      limit: 10
      
  cross_reference_analysis: |
    analysis:
      pattern_id: pattern-commands-123
      find_relationships: all
      correlation_threshold: 0.6