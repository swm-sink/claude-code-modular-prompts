# Claude Context Architect - Cross-Reference Mapping System
# Comprehensive relationship mapping for lateral navigation between contexts
# Version: 1.0
# Created: 2025-08-07

# =============================================================================
# CROSS-REFERENCE SYSTEM OVERVIEW
# =============================================================================
# This system maps all lateral relationships between contexts across the
# hierarchical system, enabling intelligent cross-layer navigation and
# semantic discovery of related information.

cross_reference_system:
  version: "1.0"
  total_contexts: 25
  total_relationships: 156  # Estimated based on n*(n-1)/2 potential connections
  relationship_types: 8
  strength_calculation: "weighted_multi_factor"

# =============================================================================
# SEMANTIC RELATIONSHIPS
# =============================================================================
# Content-based relationships where contexts share concepts, terminology, or themes
semantic_relationships:

  # Project Foundation Semantic Connections
  project_foundation_semantics:
    "CLAUDE.md":
      related_contexts:
        - target: ".claude/project-dna.md"
          relationship_type: "foundational_expansion"
          strength: 0.95
          shared_concepts: ["project_identity", "core_principles", "team_culture"]
          connection_reason: "Project DNA expands on foundational concepts in CLAUDE.md"
          
        - target: ".claude/decision-log.md"
          relationship_type: "decision_foundation"
          strength: 0.85
          shared_concepts: ["architectural_decisions", "strategic_choices", "evolution_rationale"]
          connection_reason: "Decision log references principles and constraints from CLAUDE.md"
          
        - target: ".claude/domain-context.md"
          relationship_type: "contextual_foundation"
          strength: 0.80
          shared_concepts: ["project_scope", "domain_boundaries", "business_context"]
          connection_reason: "Domain context inherits project scope and boundaries"

    ".claude/project-dna.md":
      related_contexts:
        - target: ".claude/project-evolution.md"
          relationship_type: "temporal_development"
          strength: 0.90
          shared_concepts: ["project_characteristics", "evolutionary_patterns", "growth_trajectory"]
          connection_reason: "Evolution document tracks how project DNA has developed"
          
        - target: ".claude/technical-context.md"
          relationship_type: "implementation_influence"
          strength: 0.75
          shared_concepts: ["architectural_philosophy", "technical_principles", "implementation_constraints"]
          connection_reason: "Technical decisions reflect project DNA characteristics"

  # Domain Intelligence Semantic Connections
  domain_intelligence_semantics:
    ".claude/domain-context.md":
      related_contexts:
        - target: ".claude/domain-glossary.md"
          relationship_type: "terminology_expansion"
          strength: 0.98
          shared_concepts: ["domain_vocabulary", "business_terminology", "concept_definitions"]
          connection_reason: "Glossary provides detailed definitions for domain context terms"
          
        - target: ".claude/business-rules.md"
          relationship_type: "logic_implementation"
          strength: 0.88
          shared_concepts: ["business_constraints", "domain_rules", "operational_logic"]
          connection_reason: "Business rules implement the constraints defined in domain context"
          
        - target: ".claude/user-journeys.md"
          relationship_type: "user_experience_mapping"
          strength: 0.82
          shared_concepts: ["user_interactions", "domain_workflows", "experience_patterns"]
          connection_reason: "User journeys operationalize domain context through user experiences"

    ".claude/domain-glossary.md":
      related_contexts:
        - target: ".claude/business-rules.md"
          relationship_type: "terminology_usage"
          strength: 0.92
          shared_concepts: ["domain_terms", "business_vocabulary", "rule_definitions"]
          connection_reason: "Business rules extensively use terminology defined in glossary"
          
        - target: ".claude/technical-context.md"
          relationship_type: "domain_technical_bridge"
          strength: 0.70
          shared_concepts: ["implementation_terminology", "domain_model_mapping", "technical_vocabulary"]
          connection_reason: "Technical context uses domain terms and concepts"
          
        - target: ".claude/data-models.md"
          relationship_type: "conceptual_modeling"
          strength: 0.85
          shared_concepts: ["entity_definitions", "relationship_terminology", "data_concepts"]
          connection_reason: "Data models implement concepts defined in domain glossary"

  # Technical Architecture Semantic Connections
  technical_architecture_semantics:
    ".claude/technical-context.md":
      related_contexts:
        - target: ".claude/architecture-patterns.md"
          relationship_type: "architectural_elaboration"
          strength: 0.95
          shared_concepts: ["system_architecture", "design_patterns", "technical_decisions"]
          connection_reason: "Architecture patterns elaborate on technical context foundations"
          
        - target: ".claude/framework-conventions.md"
          relationship_type: "implementation_standards"
          strength: 0.88
          shared_concepts: ["coding_standards", "framework_usage", "implementation_patterns"]
          connection_reason: "Framework conventions implement technical context standards"
          
        - target: ".claude/workflow-context.md"
          relationship_type: "process_technical_integration"
          strength: 0.76
          shared_concepts: ["development_procedures", "technical_workflows", "implementation_processes"]
          connection_reason: "Workflow context incorporates technical standards and procedures"

    ".claude/architecture-patterns.md":
      related_contexts:
        - target: ".claude/deployment-patterns.md"
          relationship_type: "operational_architecture"
          strength: 0.83
          shared_concepts: ["system_deployment", "infrastructure_patterns", "operational_architecture"]
          connection_reason: "Deployment patterns implement architectural decisions operationally"
          
        - target: ".claude/integration-context.md"
          relationship_type: "system_integration_architecture"
          strength: 0.79
          shared_concepts: ["integration_patterns", "system_boundaries", "architectural_integration"]
          connection_reason: "Integration context implements architectural integration patterns"

# =============================================================================
# FUNCTIONAL RELATIONSHIPS
# =============================================================================
# Relationships where contexts work together to accomplish specific tasks or workflows
functional_relationships:

  # Quality Assurance Workflow Chain
  quality_workflow_chain:
    primary_contexts:
      - ".claude/testing-strategy.md"
      - ".claude/code-review-standards.md"
      - ".claude/development-process.md"
      - ".claude/framework-conventions.md"
    
    relationship_mapping:
      ".claude/testing-strategy.md":
        functional_partners:
          - target: ".claude/code-review-standards.md"
            relationship_type: "quality_gate_sequence"
            strength: 0.92
            workflow_stage: "quality_assurance"
            interaction_pattern: "testing_informs_review_criteria"
            
          - target: ".claude/framework-conventions.md"
            relationship_type: "implementation_quality"
            strength: 0.85
            workflow_stage: "implementation_validation"
            interaction_pattern: "testing_validates_conventions"

      ".claude/code-review-standards.md":
        functional_partners:
          - target: ".claude/development-process.md"
            relationship_type: "process_integration"
            strength: 0.89
            workflow_stage: "development_lifecycle"
            interaction_pattern: "review_embedded_in_process"

  # Development Lifecycle Chain
  development_lifecycle_chain:
    primary_contexts:
      - ".claude/development-process.md"
      - ".claude/testing-strategy.md"
      - ".claude/deployment-workflow.md"
      - ".claude/troubleshooting-guides.md"
    
    relationship_mapping:
      ".claude/development-process.md":
        functional_partners:
          - target: ".claude/testing-strategy.md"
            relationship_type: "lifecycle_stage_dependency"
            strength: 0.94
            workflow_stage: "development_to_testing"
            interaction_pattern: "development_triggers_testing"
            
          - target: ".claude/deployment-workflow.md"
            relationship_type: "lifecycle_progression"
            strength: 0.87
            workflow_stage: "development_to_deployment"
            interaction_pattern: "successful_development_enables_deployment"

      ".claude/deployment-workflow.md":
        functional_partners:
          - target: ".claude/troubleshooting-guides.md"
            relationship_type: "operational_support"
            strength: 0.81
            workflow_stage: "deployment_to_maintenance"
            interaction_pattern: "deployment_issues_require_troubleshooting"

  # User Experience Chain
  user_experience_chain:
    primary_contexts:
      - ".claude/user-journeys.md"
      - ".claude/business-rules.md"
      - ".claude/workflow-context.md"
      - ".claude/data-models.md"
    
    relationship_mapping:
      ".claude/user-journeys.md":
        functional_partners:
          - target: ".claude/business-rules.md"
            relationship_type: "experience_constraint"
            strength: 0.90
            workflow_stage: "user_interaction_validation"
            interaction_pattern: "journeys_must_comply_with_rules"
            
          - target: ".claude/data-models.md"
            relationship_type: "data_interaction"
            strength: 0.84
            workflow_stage: "user_data_interaction"
            interaction_pattern: "journeys_interact_with_data_models"

# =============================================================================
# DEPENDENCY RELATIONSHIPS
# =============================================================================
# Direct and indirect dependency connections following the hierarchical structure
dependency_relationships:

  # Direct Layer Dependencies
  direct_layer_dependencies:
    layer_2_to_layer_1:
      - source: ".claude/domain-context.md"
        target: "CLAUDE.md"
        dependency_type: "foundational_inheritance"
        strength: 1.0
        inheritance_elements: ["project_identity", "core_constraints", "domain_scope"]
        
      - source: ".claude/domain-glossary.md"
        target: ".claude/project-dna.md"
        dependency_type: "characteristic_inheritance"
        strength: 0.85
        inheritance_elements: ["project_characteristics", "cultural_patterns", "terminology_style"]

    layer_3_to_layer_2:
      - source: ".claude/technical-context.md"
        target: ".claude/domain-context.md"
        dependency_type: "domain_technical_alignment"
        strength: 0.95
        inheritance_elements: ["domain_vocabulary", "business_constraints", "functional_requirements"]
        
      - source: ".claude/framework-conventions.md"
        target: ".claude/domain-glossary.md"
        dependency_type: "terminology_consistency"
        strength: 0.78
        inheritance_elements: ["naming_conventions", "domain_terminology", "concept_mapping"]

    layer_4_to_layer_3:
      - source: ".claude/workflow-context.md"
        target: ".claude/technical-context.md"
        dependency_type: "technical_process_alignment"
        strength: 0.92
        inheritance_elements: ["technical_standards", "implementation_patterns", "quality_requirements"]

    layer_5_to_layer_4:
      - source: ".claude/integration-context.md"
        target: ".claude/workflow-context.md"
        dependency_type: "operational_integration"
        strength: 0.88
        inheritance_elements: ["operational_procedures", "process_integration", "workflow_standards"]

  # Indirect Cross-Layer Dependencies
  indirect_dependencies:
    layer_3_to_layer_1:
      - source: ".claude/architecture-patterns.md"
        target: "CLAUDE.md"
        dependency_path: ["technical-context.md", "domain-context.md", "CLAUDE.md"]
        dependency_type: "principle_alignment"
        strength: 0.82
        
    layer_5_to_layer_1:
      - source: ".claude/system-boundaries.md"
        target: ".claude/project-dna.md"
        dependency_path: ["integration-context.md", "workflow-context.md", "technical-context.md", "domain-context.md", "project-dna.md"]
        dependency_type: "identity_consistency"
        strength: 0.65

# =============================================================================
# TEMPORAL RELATIONSHIPS
# =============================================================================
# Relationships based on sequence, lifecycle stage, or time-based dependencies
temporal_relationships:

  # Development Lifecycle Sequences
  development_sequences:
    planning_to_implementation:
      - source: ".claude/project-dna.md"
        target: ".claude/architecture-patterns.md"
        temporal_type: "planning_to_design"
        strength: 0.87
        sequence_stage: "conceptual_to_architectural"
        
      - source: ".claude/architecture-patterns.md"
        target: ".claude/framework-conventions.md"
        temporal_type: "design_to_implementation"
        strength: 0.91
        sequence_stage: "architectural_to_coding"

    implementation_to_deployment:
      - source: ".claude/framework-conventions.md"
        target: ".claude/testing-strategy.md"
        temporal_type: "implementation_to_validation"
        strength: 0.89
        sequence_stage: "coding_to_testing"
        
      - source: ".claude/testing-strategy.md"
        target: ".claude/deployment-patterns.md"
        temporal_type: "validation_to_deployment"
        strength: 0.86
        sequence_stage: "testing_to_release"

  # Problem Resolution Sequences
  problem_resolution_sequences:
    detection_to_resolution:
      - source: ".claude/troubleshooting-guides.md"
        target: ".claude/technical-context.md"
        temporal_type: "problem_to_context"
        strength: 0.83
        sequence_stage: "issue_identification_to_technical_understanding"
        
      - source: ".claude/technical-context.md"
        target: ".claude/architecture-patterns.md"
        temporal_type: "context_to_solution_patterns"
        strength: 0.79
        sequence_stage: "understanding_to_solution_design"

# =============================================================================
# USAGE-BASED RELATIONSHIPS
# =============================================================================
# Relationships discovered through co-usage patterns and behavioral analysis
usage_based_relationships:

  # High Co-Usage Patterns
  frequently_accessed_together:
    domain_and_technical_exploration:
      - context_pair: [".claude/domain-glossary.md", ".claude/framework-conventions.md"]
        co_usage_frequency: 0.78
        relationship_type: "terminology_implementation"
        usage_pattern: "users_check_terminology_then_implementation_standards"
        
      - context_pair: [".claude/business-rules.md", ".claude/testing-strategy.md"]
        co_usage_frequency: 0.72
        relationship_type: "rule_validation"
        usage_pattern: "business_rules_drive_testing_requirements"

    architecture_and_process_alignment:
      - context_pair: [".claude/architecture-patterns.md", ".claude/deployment-patterns.md"]
        co_usage_frequency: 0.85
        relationship_type: "architectural_operational_consistency"
        usage_pattern: "architectural_decisions_inform_deployment_strategies"
        
      - context_pair: [".claude/framework-conventions.md", ".claude/code-review-standards.md"]
        co_usage_frequency: 0.81
        relationship_type: "standard_enforcement"
        usage_pattern: "conventions_define_review_criteria"

  # Sequential Navigation Patterns
  common_navigation_sequences:
    exploration_sequence_1:
      pattern: ["CLAUDE.md", ".claude/project-dna.md", ".claude/domain-context.md", ".claude/technical-context.md"]
      frequency: 0.67
      pattern_type: "foundation_to_implementation"
      user_intent: "comprehensive_project_understanding"
      
    exploration_sequence_2:
      pattern: [".claude/domain-glossary.md", ".claude/business-rules.md", ".claude/user-journeys.md"]
      frequency: 0.59
      pattern_type: "domain_deep_dive"
      user_intent: "business_domain_expertise"

# =============================================================================
# CONTEXTUAL RELATIONSHIPS
# =============================================================================
# Relationships based on shared context, environment, or situational factors
contextual_relationships:

  # Project Lifecycle Context
  lifecycle_context_groups:
    startup_phase_contexts:
      primary_contexts:
        - "CLAUDE.md"
        - ".claude/project-dna.md"
        - ".claude/domain-context.md"
        - ".claude/architecture-patterns.md"
      relationship_strength: 0.92
      context_reason: "foundational_setup_phase"
      
    development_phase_contexts:
      primary_contexts:
        - ".claude/framework-conventions.md"
        - ".claude/development-process.md"
        - ".claude/testing-strategy.md"
        - ".claude/code-review-standards.md"
      relationship_strength: 0.88
      context_reason: "active_development_phase"
      
    deployment_phase_contexts:
      primary_contexts:
        - ".claude/deployment-patterns.md"
        - ".claude/deployment-workflow.md"
        - ".claude/integration-context.md"
        - ".claude/troubleshooting-guides.md"
      relationship_strength: 0.84
      context_reason: "deployment_and_operations_phase"

  # Problem Domain Context Groups
  problem_domain_groups:
    quality_assurance_domain:
      primary_contexts:
        - ".claude/testing-strategy.md"
        - ".claude/code-review-standards.md"
        - ".claude/framework-conventions.md"
        - ".claude/development-process.md"
      relationship_strength: 0.89
      context_reason: "quality_focus_activities"
      
    integration_domain:
      primary_contexts:
        - ".claude/integration-context.md"
        - ".claude/system-boundaries.md"
        - ".claude/external-dependencies.md"
        - ".claude/cross-cutting-concerns.md"
      relationship_strength: 0.86
      context_reason: "system_integration_activities"

# =============================================================================
# RELATIONSHIP STRENGTH CALCULATION
# =============================================================================
strength_calculation:
  
  # Multi-Factor Scoring Algorithm
  scoring_factors:
    semantic_similarity: 0.25      # Content and concept similarity
    functional_dependency: 0.20    # Workflow and task relationships
    hierarchical_proximity: 0.15   # Distance in dependency tree
    usage_correlation: 0.20        # Co-usage frequency patterns
    temporal_sequence: 0.10        # Time-based relationship strength
    contextual_relevance: 0.10     # Situational relationship importance
  
  # Strength Categories
  strength_categories:
    very_strong: 0.85-1.0          # Critical relationships, always consider
    strong: 0.70-0.84              # Important relationships, usually consider
    moderate: 0.50-0.69            # Situational relationships, context-dependent
    weak: 0.30-0.49                # Occasional relationships, low priority
    minimal: 0.0-0.29              # Rare relationships, edge cases

  # Dynamic Strength Adjustment
  dynamic_adjustments:
    usage_pattern_learning: "enabled"      # Adjust based on actual usage
    temporal_decay: "enabled"              # Reduce strength for unused relationships
    context_amplification: "enabled"       # Boost strength for current context
    user_preference_weighting: "enabled"   # Personalize relationship strengths

# =============================================================================
# CROSS-REFERENCE NAVIGATION RULES
# =============================================================================
navigation_rules:
  
  # Relationship Traversal Rules
  traversal_rules:
    minimum_strength_threshold: 0.4        # Don't suggest relationships below this
    maximum_suggestions_per_context: 5     # Limit suggestions to avoid overwhelm
    relationship_diversity: "encouraged"   # Prefer diverse relationship types
    circular_reference_prevention: "enabled"
    
  # Context Loading Strategy
  related_context_loading:
    strong_relationships: "preload"        # Load strong relationships eagerly
    moderate_relationships: "on_demand"    # Load when explicitly requested
    weak_relationships: "lazy"             # Load only when specifically accessed
    caching_strategy: "LRU_with_relationship_weighting"
    
  # Discovery Enhancement
  discovery_features:
    suggest_related_contexts: "enabled"
    cross_reference_highlighting: "enabled"
    relationship_explanation: "enabled"
    alternative_path_suggestions: "enabled"

# =============================================================================
# RELATIONSHIP VALIDATION
# =============================================================================
validation_framework:
  
  # Relationship Integrity Checks
  integrity_validation:
    bidirectional_consistency: "required"    # A→B implies B→A relationship exists
    strength_symmetry_tolerance: 0.15        # Allow 15% strength difference in bidirectional relationships
    circular_reference_detection: "enabled"
    orphaned_relationship_detection: "enabled"
    
  # Content Validation
  content_validation:
    shared_concept_verification: "enabled"   # Verify claimed shared concepts exist
    terminology_consistency_check: "enabled" # Check consistent term usage
    context_availability_validation: "enabled" # Ensure referenced contexts exist
    
  # Performance Validation
  performance_validation:
    relationship_resolution_time: "< 50ms"
    cross_reference_query_performance: "< 100ms"
    suggestion_generation_time: "< 25ms"
    memory_usage_optimization: "enabled"

# =============================================================================
# RELATIONSHIP EVOLUTION
# =============================================================================
evolution_management:
  
  # Automated Relationship Discovery
  discovery_mechanisms:
    content_similarity_analysis: "weekly"
    usage_pattern_analysis: "daily"
    semantic_relationship_mining: "monthly"
    cross_reference_link_analysis: "weekly"
    
  # Relationship Lifecycle Management
  lifecycle_management:
    new_relationship_validation: "required"
    relationship_strength_updates: "continuous"
    obsolete_relationship_cleanup: "monthly"
    relationship_quality_scoring: "enabled"
    
  # Learning and Adaptation
  adaptive_learning:
    user_behavior_learning: "enabled"
    relationship_effectiveness_tracking: "enabled"
    suggestion_success_rate_monitoring: "enabled"
    continuous_improvement_cycles: "quarterly"

# =============================================================================
# END OF CROSS-REFERENCE SYSTEM
# =============================================================================
# This comprehensive cross-reference system enables intelligent lateral
# navigation across the hierarchical context structure, providing users
# with rich relationship discovery and context-aware navigation paths.