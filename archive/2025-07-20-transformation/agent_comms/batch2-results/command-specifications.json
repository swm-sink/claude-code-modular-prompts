{
  "version": "1.0.0",
  "generatedDate": "2025-07-19",
  "totalCommands": 8,
  "commands": {
    "/auto": {
      "name": "auto",
      "displayName": "Intelligent Router",
      "purpose": "Intelligently route requests to the optimal command when user is uncertain",
      "category": "routing",
      "executionTarget": 2,
      "tokenBudget": {
        "basic": 3000,
        "enhanced": 8000,
        "full": 15000
      },
      "capabilities": [
        "Intent analysis",
        "Complexity assessment",
        "Command recommendation",
        "Pattern learning",
        "Multi-path suggestions"
      ],
      "contextSignals": [
        "request_complexity",
        "project_state",
        "user_history",
        "file_scope"
      ],
      "progressiveModes": {
        "basic": {
          "description": "Simple routing based on keywords",
          "features": ["keyword_matching", "basic_routing"]
        },
        "enhanced": {
          "description": "Context-aware routing with analysis",
          "features": ["context_analysis", "multi_option_presentation", "confidence_scoring"]
        },
        "advanced": {
          "description": "Learning-based routing with predictions",
          "features": ["pattern_learning", "predictive_routing", "workflow_optimization"]
        }
      },
      "composition": {
        "chainable": true,
        "inputs": ["user_request", "context_state"],
        "outputs": ["selected_command", "confidence_score", "alternatives"]
      },
      "examples": [
        "/auto \"fix the login bug\"",
        "/auto \"help me understand this codebase\"",
        "/auto \"deploy my changes safely\""
      ]
    },
    "/task": {
      "name": "task",
      "displayName": "Single-Focus Development",
      "purpose": "Quick, focused development tasks on single components",
      "category": "development",
      "executionTarget": 5,
      "tokenBudget": {
        "basic": 5000,
        "enhanced": 12000,
        "full": 20000
      },
      "capabilities": [
        "Single file editing",
        "TDD enforcement",
        "Test generation",
        "Code refactoring",
        "Bug fixes"
      ],
      "contextSignals": [
        "file_type",
        "test_coverage",
        "git_status",
        "quality_gates"
      ],
      "progressiveModes": {
        "basic": {
          "description": "Simple file edits with basic validation",
          "features": ["file_editing", "syntax_validation"]
        },
        "enhanced": {
          "description": "TDD-driven development with quality checks",
          "features": ["tdd_cycle", "coverage_enforcement", "quality_validation"]
        },
        "advanced": {
          "description": "Comprehensive refactoring with impact analysis",
          "features": ["impact_analysis", "automated_refactoring", "performance_optimization"]
        }
      },
      "qualityGates": {
        "tdd": "mandatory",
        "coverage": 90,
        "linting": true,
        "security": "basic"
      },
      "composition": {
        "chainable": true,
        "inputs": ["task_description", "target_files"],
        "outputs": ["modified_files", "test_results", "coverage_report"]
      },
      "examples": [
        "/task \"fix null pointer in UserService\"",
        "/task --comprehensive \"refactor authentication logic\"",
        "/task --safety=high \"update payment processing\""
      ]
    },
    "/feature": {
      "name": "feature",
      "displayName": "Complete Feature Development",
      "purpose": "End-to-end feature implementation with full lifecycle management",
      "category": "development",
      "executionTarget": 5,
      "tokenBudget": {
        "basic": 10000,
        "enhanced": 25000,
        "full": 40000
      },
      "capabilities": [
        "PRD generation",
        "Multi-component development",
        "Integration testing",
        "Documentation generation",
        "Production readiness"
      ],
      "contextSignals": [
        "project_structure",
        "dependencies",
        "existing_features",
        "architectural_patterns"
      ],
      "progressiveModes": {
        "basic": {
          "description": "Simple feature addition with basic structure",
          "features": ["feature_scaffolding", "basic_implementation"]
        },
        "enhanced": {
          "description": "Full feature with tests and documentation",
          "features": ["prd_driven", "comprehensive_testing", "auto_documentation"]
        },
        "advanced": {
          "description": "Enterprise feature with all safety checks",
          "features": ["security_analysis", "performance_benchmarking", "rollback_planning"]
        }
      },
      "workflowStages": [
        "requirements_analysis",
        "design_generation",
        "implementation",
        "testing",
        "documentation",
        "deployment_prep"
      ],
      "composition": {
        "chainable": true,
        "inputs": ["feature_request", "requirements"],
        "outputs": ["implemented_feature", "test_suite", "documentation", "deployment_plan"]
      },
      "examples": [
        "/feature \"add user authentication\"",
        "/feature --prd \"implement shopping cart\"",
        "/feature --enterprise \"multi-tenant support\""
      ]
    },
    "/analyze": {
      "name": "analyze",
      "displayName": "Research & Analysis Hub",
      "purpose": "Comprehensive code analysis, research, and understanding",
      "category": "research",
      "executionTarget": 3,
      "tokenBudget": {
        "basic": 8000,
        "enhanced": 20000,
        "full": 35000
      },
      "capabilities": [
        "Codebase exploration",
        "Dependency mapping",
        "Performance profiling",
        "Security analysis",
        "Architecture review"
      ],
      "contextSignals": [
        "analysis_scope",
        "code_complexity",
        "historical_data",
        "performance_metrics"
      ],
      "progressiveModes": {
        "basic": {
          "description": "Quick code exploration and understanding",
          "features": ["file_search", "basic_analysis", "quick_summary"]
        },
        "enhanced": {
          "description": "Deep analysis with visualizations",
          "features": ["dependency_graphs", "complexity_analysis", "pattern_detection"]
        },
        "advanced": {
          "description": "Comprehensive audit with recommendations",
          "features": ["performance_profiling", "security_scanning", "optimization_suggestions"]
        }
      },
      "analysisTypes": [
        "structural",
        "behavioral",
        "performance",
        "security",
        "maintainability"
      ],
      "composition": {
        "chainable": true,
        "inputs": ["analysis_target", "analysis_type"],
        "outputs": ["analysis_report", "visualizations", "recommendations"]
      },
      "examples": [
        "/analyze \"authentication system\"",
        "/analyze --deep \"database performance\"",
        "/analyze --security \"API endpoints\""
      ]
    },
    "/deploy": {
      "name": "deploy",
      "displayName": "Production Deployment",
      "purpose": "Safe, validated production deployments with rollback capability",
      "category": "deployment",
      "executionTarget": 5,
      "tokenBudget": {
        "basic": 5000,
        "enhanced": 15000,
        "full": 25000
      },
      "capabilities": [
        "Pre-deployment validation",
        "Safety checks",
        "Rollback planning",
        "Performance validation",
        "Monitoring setup"
      ],
      "contextSignals": [
        "environment",
        "change_scope",
        "risk_level",
        "rollback_capability"
      ],
      "progressiveModes": {
        "basic": {
          "description": "Simple deployment with basic checks",
          "features": ["basic_validation", "simple_deployment"]
        },
        "enhanced": {
          "description": "Full validation with staging tests",
          "features": ["staging_validation", "automated_testing", "rollback_prep"]
        },
        "advanced": {
          "description": "Enterprise deployment with full safety",
          "features": ["canary_deployment", "performance_monitoring", "instant_rollback"]
        }
      },
      "safetyChecks": [
        "test_coverage",
        "performance_regression",
        "security_vulnerabilities",
        "dependency_conflicts",
        "database_migrations"
      ],
      "composition": {
        "chainable": true,
        "inputs": ["deployment_target", "change_set"],
        "outputs": ["deployment_status", "rollback_plan", "monitoring_dashboard"]
      },
      "examples": [
        "/deploy --staging",
        "/deploy --production --safety=high",
        "/deploy --hotfix --emergency"
      ]
    },
    "/session": {
      "name": "session",
      "displayName": "Long-Running Work",
      "purpose": "Extended development sessions with context preservation",
      "category": "workflow",
      "executionTarget": 2,
      "tokenBudget": {
        "basic": 3000,
        "enhanced": 10000,
        "full": 20000
      },
      "capabilities": [
        "Context preservation",
        "Work resumption",
        "Progress tracking",
        "Checkpoint management",
        "Session analytics"
      ],
      "contextSignals": [
        "session_duration",
        "work_complexity",
        "interruption_frequency",
        "context_size"
      ],
      "progressiveModes": {
        "basic": {
          "description": "Simple session tracking",
          "features": ["basic_checkpointing", "manual_save"]
        },
        "enhanced": {
          "description": "Automatic context management",
          "features": ["auto_checkpoint", "smart_resumption", "progress_visualization"]
        },
        "advanced": {
          "description": "AI-assisted session optimization",
          "features": ["predictive_loading", "context_compression", "workflow_optimization"]
        }
      },
      "sessionFeatures": [
        "automatic_saves",
        "context_compression",
        "work_summaries",
        "time_tracking",
        "milestone_tracking"
      ],
      "composition": {
        "chainable": true,
        "inputs": ["session_name", "work_scope"],
        "outputs": ["session_id", "checkpoint_data", "progress_report"]
      },
      "examples": [
        "/session \"refactoring project\"",
        "/session --resume abc123",
        "/session --track \"feature development\""
      ]
    },
    "/team": {
      "name": "team",
      "displayName": "Multi-Agent Coordination",
      "purpose": "Parallel development with intelligent agent coordination",
      "category": "collaboration",
      "executionTarget": 5,
      "tokenBudget": {
        "basic": 8000,
        "enhanced": 20000,
        "full": 35000
      },
      "capabilities": [
        "Agent spawning",
        "Work distribution",
        "Progress synchronization",
        "Conflict resolution",
        "Result consolidation"
      ],
      "contextSignals": [
        "task_complexity",
        "parallelization_opportunity",
        "resource_availability",
        "dependency_chains"
      ],
      "progressiveModes": {
        "basic": {
          "description": "Simple parallel task execution",
          "features": ["basic_distribution", "simple_coordination"]
        },
        "enhanced": {
          "description": "Smart work distribution with sync",
          "features": ["intelligent_distribution", "real_time_sync", "conflict_detection"]
        },
        "advanced": {
          "description": "Adaptive team coordination",
          "features": ["dynamic_rebalancing", "predictive_conflict_resolution", "performance_optimization"]
        }
      },
      "coordinationPatterns": [
        "divide_and_conquer",
        "pipeline",
        "scatter_gather",
        "consensus",
        "hierarchical"
      ],
      "composition": {
        "chainable": true,
        "inputs": ["team_task", "agent_count", "coordination_strategy"],
        "outputs": ["consolidated_results", "performance_metrics", "conflict_report"]
      },
      "examples": [
        "/team \"refactor API\" --agents=3",
        "/team --strategy=pipeline \"process data migration\"",
        "/team --optimize \"implement microservices\""
      ]
    },
    "/setup": {
      "name": "setup",
      "displayName": "Framework Management",
      "purpose": "Framework initialization, configuration, and optimization",
      "category": "management",
      "executionTarget": 5,
      "tokenBudget": {
        "basic": 5000,
        "enhanced": 12000,
        "full": 20000
      },
      "capabilities": [
        "Framework initialization",
        "Configuration management",
        "Performance optimization",
        "Documentation generation",
        "Migration assistance"
      ],
      "contextSignals": [
        "project_state",
        "framework_version",
        "configuration_completeness",
        "optimization_opportunities"
      ],
      "progressiveModes": {
        "basic": {
          "description": "Simple setup and configuration",
          "features": ["basic_init", "default_config"]
        },
        "enhanced": {
          "description": "Intelligent setup with optimization",
          "features": ["smart_config", "performance_tuning", "custom_templates"]
        },
        "advanced": {
          "description": "Full framework management suite",
          "features": ["auto_optimization", "predictive_configuration", "team_sync"]
        }
      },
      "managementFeatures": [
        "wizard_mode",
        "auto_detection",
        "optimization_suggestions",
        "migration_tools",
        "health_checks"
      ],
      "subcommands": {
        "init": "Initialize new project",
        "optimize": "Optimize existing setup",
        "validate": "Validate configuration",
        "migrate": "Migrate from old commands",
        "docs": "Generate documentation"
      },
      "composition": {
        "chainable": true,
        "inputs": ["setup_command", "project_context"],
        "outputs": ["configuration", "optimization_report", "documentation"]
      },
      "examples": [
        "/setup",
        "/setup optimize",
        "/setup migrate --from=v2",
        "/setup docs --format=markdown"
      ]
    }
  },
  "commandComposition": {
    "chainingOperator": "|",
    "parallelOperator": "&",
    "conditionalOperator": "&&",
    "examples": [
      "/analyze \"api performance\" | /feature \"add caching\"",
      "/team \"refactor\" & /session --track",
      "/feature \"payment\" && /deploy --staging"
    ]
  },
  "progressiveEnhancement": {
    "modifiers": {
      "--comprehensive": "Enable all advanced features",
      "--safety": "Set safety level (low|medium|high)",
      "--mode": "Set execution mode",
      "--track": "Enable detailed tracking"
    },
    "contextAdaptation": {
      "enabled": true,
      "signals": ["git_state", "project_type", "user_history", "time_of_day"]
    }
  },
  "performanceTargets": {
    "routingDecision": 2,
    "commandInit": 5,
    "firstOutput": 10,
    "contextSwitch": 1,
    "errorRecovery": 3
  },
  "migrationMapping": {
    "/init": "/setup",
    "/init-new": "/setup",
    "/init-custom": "/setup",
    "/init-research": "/analyze --mode=research",
    "/init-validate": "/setup validate",
    "/query": "/analyze",
    "/context-prime": "/analyze --deep",
    "/protocol": "/deploy",
    "/swarm": "/team",
    "/meta": "/setup optimize",
    "/meta-review": "/setup optimize --review",
    "/meta-optimize": "/setup optimize",
    "/meta-evolve": "/setup optimize --evolve",
    "/meta-govern": "/setup optimize --govern",
    "/meta-fix": "/setup optimize --fix",
    "/docs": "/setup docs",
    "/chain": "Native composition support"
  }
}