# Performance Bottleneck Visualization

Generated: 2025-07-19

## Token Usage Analysis

Commands with Excessive Tokens (>5K)
====================================
meta                 ██████████████████████████████████████████████████ 47,093
context-prime        ███████████████████ 18,300
chain                █████████████████ 16,636
protocol             █████████████████ 16,302
feature              █████████████████ 16,125
swarm                ███████ 7,287
auto                 ██████ 6,065
query                ██████ 5,822
task-enhanced        █████ 5,525

Workflow Token Costs
====================
feature_development  ██████████████████████████████████████████████████ 64,325
multi_agent          █████████████████████████████████████████ 52,807
research_analysis    ██████████████████████████████████ 43,946
simple_task          ████████████████████████████ 37,262
full_auto            ███████████████████████████ 34,965

Module Category Token Distribution
==================================
patterns             ██████████████████████████████████████████████████ 133,338
development          █████████████████████████████████████ 99,049
meta                 ██████████ 28,928

## Critical Findings

1. **Meta Command**: Uses 47K tokens (23.5x its direct content!)
2. **Feature Workflow**: Consumes 32% of context window
3. **Module Overhead**: 261K tokens loaded regardless of operation
4. **Cost Impact**: $432/month at current usage patterns

## Optimization Priorities

1. Reduce meta command by 89% (save 42K tokens)
2. Implement lazy module loading (save 100K+ tokens)
3. Deduplicate modules (save 2K+ tokens)
4. Extract documentation from runtime (save 50K tokens)

## Before/After Projection

```
Current State:
├─ Framework Overhead: 261,315 tokens (130% of context)
├─ Average Workflow: 46,661 tokens
└─ Monthly Cost: $432

Target State (60% reduction):
├─ Framework Overhead: 104,526 tokens (52% of context)
├─ Average Workflow: 18,664 tokens
└─ Monthly Cost: $173 (save $259/month)
```